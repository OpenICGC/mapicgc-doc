{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MapICGC-gl-js","text":"<p>La biblioteca MapICGC GL JS, creada com a envoltori de MapLibreGL, ofereix noves funcions espec\u00edfiques en un entorn ICGC. Simplifica el desenvolupament integrant caracter\u00edstiques com tessel\u00b7les vectorials i imatges satel\u00b7litals, i incorpora de manera inmediata estils, terrenys i dades ICGC.  Proporciona funcions documentades per a la creaci\u00f3 d'un visor complet i totalment personalitzable.</p>"},{"location":"#que-es","title":"Qu\u00e8 \u00e9s?","text":"<p>La llibreria MapICGC GL JS, basada en Maplibre GL, \u00e9s una eina desenvolupada per l'Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya (ICGC) per millorar la cartografia web i proporcionar una soluci\u00f3 integrada als desenvolupadors. Permet accedir f\u00e0cilment a dades geoespacials de l'ICGC, com ara tessel\u00b7les vectorials, imatges satel\u00b7litals i models d'elevaci\u00f3 del terreny, facilitant la creaci\u00f3 de visors web personalitzats. A m\u00e9s, ofereix funcions per a la gesti\u00f3 de dades en temps d'execuci\u00f3, com geocodificaci\u00f3 i geolocalitzaci\u00f3, i el seu disseny modular permet la seva aplicaci\u00f3 en una \u00e0mplia gamma de projectes de cartografia i gesti\u00f3 de recursos.</p>"},{"location":"#com-funciona","title":"Com funciona?","text":"<p>La biblioteca MapICGC GL JS funciona integrant funcionalitats de Maplibre GL i proporcionant acc\u00e9s a dades geoespacials de l'Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya (ICGC). Per integrar-ho al teu projecte, nom\u00e8s cal instal\u00b7lar la llibreria mitjan\u00e7ant NPM o integrar-la a trav\u00e9s de CDN. Gran part del codi Maplibre/Mapbox es compatible amb la llibreria MapICGC GL JS.</p>"},{"location":"#installacio","title":"Instal\u00b7laci\u00f3","text":"<ul> <li>1.1 Instal\u00b7laci\u00f3 via NPM</li> <li>1.2 Instal\u00b7laci\u00f3 via CDN</li> </ul>"},{"location":"#exemples","title":"Exemples","text":"<ul> <li>2.1 Crear mapa i afegir estil</li> <li>2.2 Afegir terreny</li> <li>2.3 Afegir estil ORTO3D</li> <li>2.4 Afegir control d'estil</li> <li>2.5 Afegir capa d'imatge ICGC</li> <li>2.6 Afegir capa vector ICGC</li> <li>2.7 Afegir capa GeoJSON</li> <li>2.8 Afegir llistat de capes</li> <li>2.9 Afegir marcador</li> <li>2.10 Afegir control</li> <li>2.11 Afegir comparador</li> <li>2.12 Afegir logo</li> <li>2.13 Fetch dades</li> <li>2.14 Fetch dades i crea men\u00fa</li> <li>2.15 Consulta d'elements</li> <li>2.16 Afegir geocodificador ICGC</li> <li>2.17 Exemple visor</li> <li>2.18 Reutilitzaci\u00f3 codi Maplibre</li> </ul>"},{"location":"#documentacio","title":"Documentaci\u00f3","text":"<ul> <li>3.1 Funcions</li> </ul>"},{"location":"#templates","title":"Templates","text":"<ul> <li>Svelte</li> <li>React</li> <li>Vanilla JS</li> </ul>"},{"location":"#llicencia","title":"Llic\u00e8ncia","text":"<ul> <li>BSD-3-Clause license</li> </ul>"},{"location":"#versionat","title":"Versionat","text":"<ul> <li>Versi\u00f3 1.0.0</li> </ul>"},{"location":"#autor-i-contacte","title":"Autor i contacte","text":"<p>Unitat Geostart, Institut Cartogr\u00e0fic i Geol\u00f2gic de Catalunya.</p> <p></p>"},{"location":"1.1.Inst_npm/","title":"1.1 Instal\u00b7laci\u00f3 via NPM","text":""},{"location":"1.1.Inst_npm/#installacio-amb-npm","title":"Instal\u00b7laci\u00f3 amb NPM","text":"<p>Si utilitzes npm (Node Package Manager) per gestionar les depend\u00e8ncies del teu projecte, segueix aquests passos:</p> <p>1.Obre la teva terminal i navega fins al directori del teu projecte.</p> <p>2.Executa la seg\u00fcent comanda per instal\u00b7lar mapicgc-gl-js:</p> <pre><code>npm install mapicgc-gl-js\n</code></pre> <p>Aix\u00f2 descarregar\u00e0 i instal\u00b7lar\u00e0 la llibreria al teu projecte.</p> <p>3.Un cop completada la instal\u00b7laci\u00f3, pots importar la llibreria al teu codi:</p> <pre><code> const llibreria = require('mapicgc-gl-js'); //ES6\n</code></pre> <p>o</p> <pre><code> import { Map, Config } from \"mapicgc-gl-js\";\n</code></pre> <p>Ara est\u00e0s llest per comen\u00e7ar a utilitzar mapicgc-gl-js, seguint l'exemple seg\u00fcent:</p> <pre><code>&lt;script&gt;\n  import { Map, Config } from \"mapicgc-gl-js\";\n  import \"../node_modules/mapicgc-gl-js/dist/mapicgc-gl.css\";\n\n  async function initMap() {\n    const data = await Config.getConfigICGC();\n    const map = new Map({\n      container: \"map\",\n      style: data.Styles.TOPO,\n      center: [2.1464, 41.306],\n      zoom: 7.4,\n      maxZoom: 14,\n      hash: true,\n      pitch: 0,\n    });\n  }\n  initMap();\n&lt;/script&gt; \n</code></pre>"},{"location":"1.2.Inst_cdn/","title":"1.2 Instal\u00b7laci\u00f3 via CDN","text":""},{"location":"1.2.Inst_cdn/#installacio-amb-cdn","title":"Instal\u00b7laci\u00f3 amb CDN","text":"<p>Si prefereixes utilitzar un CDN per incorporar la llibreria al teu projecte, pots seguir aquests passos:</p> <p>1.Obre la teva terminal i navega fins al directori del teu projecte.</p> <p>2.Afegir la l\u00ednia seg\u00fcent al teu fitxer HTML, generalment col\u00b7locada dins la secci\u00f3 <code>&lt;head&gt;</code>:</p> <pre><code>&lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n\n&lt;link href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\" rel=\"stylesheet\" /&gt;\n</code></pre> <p>Aix\u00f2 carregar\u00e0 la llibreria directament des del CDN. Ara est\u00e0s llest per utilitzar mapicgc-gl-js al teu projecte seguint l'exemple seg\u00fcent:</p> <pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple llibreria mapicgc-gl-js&lt;/title&gt;\n    &lt;meta name=\"viewport\" content=\"initial-scale=1,maximum-scale=1,user-scalable=no\" /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\" rel=\"stylesheet\"/&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.TOPO,\n          center: [2.1464, 41.306],\n          zoom: 7.4,\n          maxZoom: 19,\n          hash: true,\n          pitch: 0,\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p> See the Pen    example-map-001 by unitatgeostart (@unitatgeostart)   on CodePen. </p>"},{"location":"2.1.0.Map/","title":"2.1 Crear mapa i afegir estil","text":""},{"location":"2.1.0.Map/#exemple","title":"Exemple","text":"<p>.Map(options) \u2192 mateixes opcions que a MapLibreGLJS</p> <p> See the Pen    example Map by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.1.0.Map/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple mapicgc-gl-js: Mapa&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.TOPO,\n          center: [2.1464, 41.306],\n          zoom: 7.4,\n          maxZoom: 14,\n          hash: true,\n          pitch: 0,\n        });\n        map.on(\"load\", () =&gt; {\n          map.addFullscreenControl();\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"2.1.0.Map/#estils-icgc","title":"Estils ICGC","text":""},{"location":"2.1.0.Map/#stylesid","title":"Styles.{id}","text":"id Mostra TOPO ORTO ORTO3D (versi\u00f3 experimental) ADMIN DARK LIGHT GEOLOGY"},{"location":"2.1.2.AddICGCTerrain/","title":"2.2 Afegir terreny","text":""},{"location":"2.1.2.AddICGCTerrain/#exemple","title":"Exemple","text":"<p>.addTerrainICGC(resolution, position)</p> <p> See the Pen    addTerrainICGC by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.1.2.AddICGCTerrain/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple mapicgc-gl-js: Afegir 3D de l'ICGC&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.ORTO,\n          center: [0.959, 42.201],\n          zoom: 13,\n          maxZoom: 14,\n          hash: true,\n          pitch: 80,\n          bearing: 40,\n        });\n        map.on(\"load\", () =&gt; {\n          map.addFullscreenControl();\n          map.addTerrainICGC(data.Terrains.ICGC5M, \"bottom-right\");\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"2.1.2.AddICGCTerrain/#terrenys-icgc","title":"Terrenys ICGC","text":""},{"location":"2.1.2.AddICGCTerrain/#terrainsid","title":"Terrains.{id}","text":"id Resoluci\u00f3 / Extensi\u00f3 ICGC5M 5m / Catalunya WORLD30M 30m / World"},{"location":"2.1.3.3dStyle/","title":"2.3 Afegir estil ORTO3D","text":""},{"location":"2.1.3.3dStyle/#exemple","title":"Exemple","text":"<p>.Map({style: mapicgcgl.Styles.ORTO3D})</p> <p> See the Pen    example Map 3D by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.1.3.3dStyle/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple mapicgc-gl-js: estil ORTO3D&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.ORTO3D,\n          center: [2.309, 41.98],\n          zoom: 18,\n          maxZoom: 19,\n          hash: true,\n          bearing: 45,\n        });\n        map.on(\"load\", () =&gt; {\n          map.addFullscreenControl();\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"2.1.3.3dStyle/#estils-icgc","title":"Estils ICGC","text":""},{"location":"2.1.3.3dStyle/#stylesid","title":"Styles.{id}","text":"id Mostra TOPO ORTO ORTO3D (versi\u00f3 experimental) ADMIN DARK LIGHT GEOLOGY"},{"location":"2.10.AddLogo/","title":"2.12 Afegir logo","text":""},{"location":"2.10.AddLogo/#exemple","title":"Exemple","text":"<p>.addLogo(options)</p> <p> See the Pen    Exemple AddMarker by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.10.AddLogo/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple mapicgc-gl-js: Afegir logo&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n      #logos {\n        display: flex;\n        flex-direction: row;\n        bottom: 40%;\n        position: absolute;\n        right: 50%;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.TOPO,\n          center: [2.1464, 41.306],\n          zoom: 7.4,\n          maxZoom: 19,\n          hash: true,\n          pitch: 0,\n        });\n        let options = {\n          id: \"icgcColorLogo\",\n          url: \"https://tilemaps.icgc.cat/cdn/images/grumpyCatTest.png\",\n          href: \"https://www.icgc.cat\",\n          height: \"100px\",\n        };\n        map.on(\"load\", () =&gt; {\n          map.addFullscreenControl();\n          map.addLogo(options); //pots canviar la posici\u00f3 del/s logo/s al css\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"2.11.FetchData/","title":"2.13 Fetch dades","text":""},{"location":"2.11.FetchData/#exemple","title":"Exemple","text":"<p>.fetchData(url,idLayer,options)</p> <p>\ud83d\udccc Format de dades: geojson o flatgeobuf</p> <p> See the Pen    Exemple fetchData by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.11.FetchData/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple mapicgc-gl-js: Fetch dades&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n\n\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.LIGHT,\n          center: [1.808, 41.618],\n          zoom: 10,\n          maxZoom: 19,\n          hash: true,\n          pitch: 0,\n        });\n        let paintOptions = {\n          layout: {\n            visibility: \"visible\",\n          },\n          paint: {\n            \"line-color\": \"green\",\n            \"line-width\": 3,\n            \"line-opacity\": 1,\n          },\n          layerPosition: \"top\", // select: 'top', 'lines' or 'labels'\n        };\n        let paintOptionsfgb = {\n          type: \"line\",\n          layout: {\n            visibility: \"visible\",\n          },\n          paint: {\n            \"line-color\": \"grey\",\n            \"line-width\": 2,\n          },\n          layerPosition: \"top\", // select: 'top', 'lines' or 'labels'\n        };\n\n        map.on(\"load\", () =&gt; {\n          map.fetchData(\n            data.Layers.FGBAdmin.comarquesVigent,\n            \"Comarques\",\n            paintOptionsfgb\n          );\n\n          map.fetchData(\n            \"https://analisi.transparenciacatalunya.cat/resource/pzaa-n72w.geojson\",\n            \"RutesMontserrat\",\n            paintOptions\n          );\n          // try with FGB data:\n\n          // map.fetchData(\n          //     \"https://flatgeobuf.org/test/data/UScounties.fgb\",\n          //     \"UScounties\", paintOptionsfgb\n          // );\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"2.11.FetchData/#posicio-layerposition","title":"Posici\u00f3 (layerPosition)","text":"id Descripci\u00f3 'top' Posici\u00f3 de la capa per sobre de tots els elements carregats pr\u00e8viament 'labels' Posici\u00f3 de la capa per sota de tots els elements de tipus etiqueta carregats pr\u00e8viament 'lines' Posici\u00f3 de la capa per sota de tots els elements de tipus l\u00ednia, punt i etiqueta carregats pr\u00e8viament"},{"location":"2.11.FetchData/#capes-fgb-icgc","title":"Capes FGB ICGC","text":""},{"location":"2.11.FetchData/#layersfgbadminid","title":"Layers.FGBAdmin.{id}","text":"id agrupacionsCensalsVigent agrupacionsCensalsVigentText areesBasiquesPolicialsVigent areesBasiquesPolicialsVigentText areesBasiquesServeisSocialsVigent areesBasiquesServeisSocialsVigentText areesGestioAssistencialVigent areesHidrogeologiquesAquifersVigent catalunyaVigent catalunyaVigentText comarquesVigent comarquesVigentText districtesCensalsVigent districtesCensalsVigentText incendisForestalsVigent incendisForestalsVigentText municipisVigent municipisVigentText partitsJudicialsVigent partitsJudicialsVigentText plaTerritorialVigent plaTerritorialVigentText provinciesVigent provinciesVigentText regionsPolicialsVigent regionsPolicialsVigentText regionsSanitariesVigent regionsSanitariesVigentText seccionsCensalsVigent seccionsCensalsVigentText sectorsSanitarisVigent vegueriesVigent vegueriesVigentText"},{"location":"2.12.FetchDataAndMenu/","title":"2.14 Fetch dades i crea men\u00fa","text":""},{"location":"2.12.FetchDataAndMenu/#exemple","title":"Exemple","text":"<p>.fetchDataAndMenu(url,idLayer,filterField,options)</p> <p>\ud83d\udccc Format de dades: geojson o flatgeobuf</p> <p> See the Pen    Exemple fetchData by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.12.FetchDataAndMenu/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple mapicgc-gl-js: Fetch dades&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n\n      /* Personalitza el teu men\u00fa: */\n\n      #menu-group {\n        position: absolute;\n        top: 10px;\n        left: 10px;\n        color: #000000;\n      }\n\n      #menu-group input[type=\"checkbox\"] + label {\n        background-color: #ffffff !important;\n      }\n\n      #titleDivMenu {\n        background-color: rgb(213 212 212);\n      }\n\n      #titleDivMenuSub {\n        background-color: #e9e9e9;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.TOPO,\n          center: [1.808, 41.618],\n          zoom: 10,\n          maxZoom: 19,\n          hash: true,\n          pitch: 0,\n        });\n\n        let filterField = \"municipi\"; // select 'all' for view all the features as a single layer\n        let optionsLayer = {\n          layout: {\n            visibility: \"visible\",\n          },\n          paint: {\n            \"line-color\": \"green\",\n            \"line-width\": 3,\n            \"line-opacity\": 1,\n          },\n          layerPosition: \"labels\",\n        };\n\n        let filterFGBField = \"NOMPROV\"; // select 'all' for view all the features as a single layer\n        let optionsLayerfgb = {\n          type: \"line\",\n          layout: {\n            visibility: \"visible\",\n          },\n          paint: {\n            \"line-color\": \"grey\",\n            \"line-opacity\": 1,\n            \"line-width\": 2,\n          },\n          layerPosition: \"labels\",\n        };\n\n        map.on(\"load\", () =&gt; {\n          map.fetchDataAndMenu(\n            \"https://analisi.transparenciacatalunya.cat/resource/pzaa-n72w.geojson\",\n            \"RutesMontserrat\",\n            filterField,\n            optionsLayer\n          );\n\n          //     map.fetchDataAndMenu(\n          //     \"https://analisi.transparenciacatalunya.cat/resource/pzaa-n72w.geojson\",\n          //     \"RutesMontserrat\", filterField, layerPosition, paintOptions);\n\n          // map.fetchDataAndMenu(\n          //     data.Layers.FGBAdmin.provinciesVigent, \"Provincies\",\n          //     filterFGBField, layerPosition, paintOptionsfgb\n          // );\n          map.fetchDataAndMenu(\n            data.Layers.FGBAdmin.provinciesVigent,\n            \"Provincies\",\n            filterFGBField,\n            optionsLayerfgb\n          );\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"2.12.FetchDataAndMenu/#posicio-layerposition","title":"Posici\u00f3 (layerPosition)","text":"id Descripci\u00f3 'top' Posici\u00f3 de la capa per sobre de tots els elements carregats pr\u00e8viament 'labels' Posici\u00f3 de la capa per sota de tots els elements de tipus etiqueta carregats pr\u00e8viament 'lines' Posici\u00f3 de la capa per sota de tots els elements de tipus l\u00ednia, punt i etiqueta carregats pr\u00e8viament"},{"location":"2.12.FetchDataAndMenu/#capes-fgb-icgc","title":"Capes FGB ICGC","text":""},{"location":"2.12.FetchDataAndMenu/#layersfgbadminid","title":"Layers.FGBAdmin.{id}","text":"id agrupacionsCensalsVigent agrupacionsCensalsVigentText areesBasiquesPolicialsVigent areesBasiquesPolicialsVigentText areesBasiquesServeisSocialsVigent areesBasiquesServeisSocialsVigentText areesGestioAssistencialVigent areesHidrogeologiquesAquifersVigent catalunyaVigent catalunyaVigentText comarquesVigent comarquesVigentText districtesCensalsVigent districtesCensalsVigentText incendisForestalsVigent incendisForestalsVigentText municipisVigent municipisVigentText partitsJudicialsVigent partitsJudicialsVigentText plaTerritorialVigent plaTerritorialVigentText provinciesVigent provinciesVigentText regionsPolicialsVigent regionsPolicialsVigentText regionsSanitariesVigent regionsSanitariesVigentText seccionsCensalsVigent seccionsCensalsVigentText sectorsSanitarisVigent vegueriesVigent vegueriesVigentText"},{"location":"2.13.AddFeatureQuery/","title":"2.15 Consulta d'elements","text":""},{"location":"2.13.AddFeatureQuery/#exemple","title":"Exemple","text":"<p>.addFeatureQuery(layer, queryFields, popupStyle)</p> <p>Retorna informaci\u00f3 al fer clic sobre un element</p> <p> See the Pen    Exemple Consulta d'elements by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.13.AddFeatureQuery/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple mapicgc-gl-js: Consulta d'elements&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.TOPO,\n          center: [2.1464, 41.306],\n          zoom: 7.4,\n          maxZoom: 19,\n          hash: true,\n          pitch: 0,\n        });\n        map.on(\"load\", () =&gt; {\n          let paintOptions = {\n            layout: { visibility: \"visible\" },\n            paint: {\n              \"line-color\": \"red\",\n              \"line-width\": 2,\n              \"line-opacity\": 1,\n            },\n            layerPosition: \"top\",\n          };\n\n          map.fetchData(\n            \"https://analisi.transparenciacatalunya.cat/resource/pzaa-n72w.geojson\",\n            \"RutesMontserrat\",\n            paintOptions\n          );\n\n          let popupStyle = {\n            title: \"Informaci\u00f3:\",\n            image: \"https://tilemaps.icgc.cat/cdn/logos/icgc_logo_color.png\",\n          };\n          // si volem camps espec\u00edfics:\n          // let queryFields = [\"nom\", \"municipi\"];\n          let queryFields = [];\n          map.addFeatureQuery(\"RutesMontserrat\", queryFields, popupStyle);\n\n          //si volem tots els par\u00e0metres:\n          // map.addFeatureQuery(\"RutesMontserrat\");\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"2.14.AddGeocoderICGC/","title":"2.16 Afegir geocodificador ICGC","text":""},{"location":"2.14.AddGeocoderICGC/#exemple","title":"Exemple","text":"<p>.addGeocoderICGC()</p> <p> See the Pen    Exemple geocodificador by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.14.AddGeocoderICGC/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple mapicgc-gl-js: Geocodificador&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.TOPO,\n          center: [1.8436, 41.5923],\n          zoom: 11,\n          maxZoom: 19,\n          hash: true,\n          pitch: 0,\n        });\n        map.on(\"load\", () =&gt; {\n          map.addGeocoderICGC();\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"2.2.AddBasemap/","title":"2.4 Afegir control d'estil","text":""},{"location":"2.2.AddBasemap/#exemple","title":"Exemple","text":"<p>.addBasemapsICGC(baseLayers)</p> <p> See the Pen    addBasemapsICGC by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.2.AddBasemap/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple mapicgc-gl-js: Afegir mapa base ICGC&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n\n      #basemap-group {\n        position: absolute;\n        bottom: 40px;\n        right: 10px;\n        color: #000000;\n        display: flex;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.TOPO, // &lt;-- add style basemap here\n          center: [2.1464, 41.306],\n          zoom: 7.4,\n          maxZoom: 14,\n          hash: true,\n          pitch: 0,\n        });\n        map.on(\"load\", () =&gt; {\n          //add multiple ICGC basemaps and get a style menu component\n          map.addFullscreenControl();\n          let basemapsicgc = [data.Styles.ORTO, data.Styles.TOPO];\n          map.addBasemapsICGC(basemapsicgc);\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"2.20.AdvancedExample/","title":"2.17 Exemple visor","text":""},{"location":"2.20.AdvancedExample/#exemple","title":"Exemple","text":"<p> See the Pen    Exemple  by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.20.AdvancedExample/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple avan\u00e7at mapicgc-gl-js&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n      /*personalitza el teu men\u00fa */\n      #menu-group {\n        position: absolute;\n        top: 10px;\n        left: 10px;\n        color: #000000;\n      }\n\n      #menu-group input[type=\"checkbox\"] + label {\n        background-color: #ffffff !important;\n      }\n\n      #titleDivMenu {\n        background-color: rgb(213 212 212);\n      }\n\n      #titleDivMenuSub {\n        background-color: #e9e9e9;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.DARK,\n          center: [1.808, 41.618],\n          zoom: 10,\n          maxZoom: 19,\n          hash: true,\n          pitch: 0,\n        });\n\n        map.on(\"load\", () =&gt; {\n          map.addGeocoderICGC();\n          map.addGeolocateControl(\n            {\n              positionOptions: {\n                enableHighAccuracy: true,\n              },\n              trackUserLocation: true,\n            },\n            \"bottom-right\"\n          );\n          map.addFullscreenControl();\n          map.addExportControl();\n\n          map.addTerrainICGC(data.Terrains.ICGC5M, \"bottom-right\");\n          let optionsLayer = {\n            type: \"raster\",\n            layout: {\n              visibility: \"visible\",\n            },\n            paint: {\n              \"raster-opacity\": 1,\n            },\n            position: \"labels\",\n          };\n\n          // map.addImageLayerICGC(\"orto2013\",mapicgcgl.Layers.Orto.ortofotoColor2013, optionsLayer);\n\n          //add vector icgc\n          let optionsLayerVector = {\n            type: \"line\",\n            layout: {\n              visibility: \"visible\",\n            },\n            paint: {\n              \"line-color\": \"red\",\n              \"line-width\": 0.2,\n            },\n            position: \"lines\",\n          };\n\n          map.addVectorLayerICGC(\n            \"Municipis\", //ID\n            data.Layers.VectorAdmin.municipisVigent, //Layer\n            optionsLayerVector //options\n          );\n\n          let paintOptions = {\n            \"point-color\": \"yellow\",\n            \"point-width\": 3,\n          };\n          let layerPosition = \"top\"; // select: 'top', 'lines' or 'labels'\n          let filterFieldRutes = \"municipi\"; // select 'all' for view all the features as a single layer\n          let optionsLayerRutes = {\n            layout: {\n              visibility: \"visible\",\n            },\n            paint: {\n              \"line-color\": \"white\",\n              \"line-width\": 3,\n              \"line-opacity\": 1,\n            },\n            layerPosition: \"labels\",\n          };\n\n          map.fetchDataAndMenu(\n            \"https://analisi.transparenciacatalunya.cat/resource/pzaa-n72w.geojson\",\n            \"RutesMontserrat\",\n            filterFieldRutes,\n            optionsLayerRutes\n          );\n\n          let popupStyle = {\n            title: \"Informaci\u00f3:\",\n            image: \"https://tilemaps.icgc.cat/cdn/logos/gencat_logo_color.png\",\n          };\n          let queryFields = [\"nom\", \"municipi\"]; // [] for query all the properties\n          map.addFeatureQuery(\"RutesMontserrat\", queryFields, popupStyle);\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"2.21.Maplibre2Mapicgc/","title":"2.18 Reutilitzaci\u00f3 codi Maplibre","text":""},{"location":"2.21.Maplibre2Mapicgc/#exemple","title":"Exemple","text":"<p>Exemple de reutilitzaci\u00f3 d'un codi Maplibre a MapICGC GL JS. Les dades utilitzades provenen de Dades Obertes i representen les explotacions agr\u00edcoles de Catalunya a la campanya 2023 gestionades per dones nascudes despr\u00e9s del 1990.</p> <p> See the Pen    Exemple  by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.21.Maplibre2Mapicgc/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Reutilitzaci\u00f3 codi Maplibre&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n\n     // const map = new maplibregl.Map({  \n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.TOPO, // o url directe: 'https://geoserveis.icgc.cat/contextmaps/icgc_mapa_base_gris.json'\n          center: [1.1437, 42.4293],\n          zoom: 12,\n        });\n\n        map.on(\"load\", () =&gt; {\n\n       // map.addControl(new maplibregl.NavigationControl());\n          map.addNavigationControl();\n\n       // let scale = new maplibregl.ScaleControl({\n       //     maxWidth: 80,\n       //     unit: 'metric'\n       // });\n       // map.addControl(scale);\n          map.addScaleControl(\n            { maxWidth: 100, unit: \"metric\" },\n            \"bottom-right\"\n          );\n\n          const layers = map.getStyle().layers;\n\n          let firstSymbolId;\n          for (let i = 0; i &lt; layers.length; i++) {\n            if (layers[i].type === \"symbol\") {\n              firstSymbolId = layers[i].id;\n              break;\n            }\n          }\n          map.addSource(\"areas\", {\n            type: \"geojson\",\n            data: \"https://analisi.transparenciacatalunya.cat/resource/iqpi-zasj.geojson?$query=SELECT%0A%20%20%60the_geom%60%2C%0A%20%20%60campanya%60%2C%0A%20%20%60oc%60%2C%0A%20%20%60nom_oc%60%2C%0A%20%20%60ajuts%60%2C%0A%20%20%60codi_pro%60%2C%0A%20%20%60nom_pro%60%2C%0A%20%20%60c_mun_ine%60%2C%0A%20%20%60n_mun_ine%60%2C%0A%20%20%60naturalesa%60%2C%0A%20%20%60data_naix%60%2C%0A%20%20%60ote%60%2C%0A%20%20%60opfh%60%2C%0A%20%20%60codi_dop%60%2C%0A%20%20%60venda_prox%60%2C%0A%20%20%60eap%60%2C%0A%20%20%60id_exp%60%2C%0A%20%20%60ha_dec%60%0AWHERE%0A%20%20caseless_one_of(%60campanya%60%2C%20%222023%22)%0A%20%20AND%20(caseless_one_of(%60naturalesa%60%2C%20%22PF%20Dona%22)%0A%20%20%20%20%20%20%20%20%20AND%20(%60data_naix%60%20%3E%20%221990%22))\",\n          });\n          map.addLayer(\n            {\n              id: \"agric23Dones1990\",\n              type: \"fill\",\n              source: \"areas\",\n              layout: {},\n              paint: {\n                \"fill-color\": \"#f08\",\n                \"fill-opacity\": 0.4,\n              },\n            },\n            firstSymbolId\n          );\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"2.3.AddImageLayerICGC/","title":"2.5 Afegir capa d'imatge ICGC","text":""},{"location":"2.3.AddImageLayerICGC/#exemple","title":"Exemple","text":"<p>.addImageLayerICGC(url,idLayer,options)</p> <p> See the Pen    Exemple addImageLayerICGC by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.3.AddImageLayerICGC/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple mapicgc-gl-js: Afegir capa imatge ICGC&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.TOPO,\n          center: [2.1464, 41.306],\n          zoom: 7.4,\n          maxZoom: 14,\n          hash: true,\n          pitch: 0,\n        });\n        map.on(\"load\", () =&gt; {\n          let optionsLayer = {\n            type: \"raster\",\n            layout: {\n              visibility: \"visible\",\n            },\n            paint: {\n              \"raster-opacity\": 1,\n            },\n            layerPosition: \"top\",\n          };\n          map.addImageLayerICGC(\n            data.Layers.Orto.ortofotoColor2013,\n            \"orto2013\",\n            optionsLayer\n          );\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"2.3.AddImageLayerICGC/#posicio-layerposition","title":"Posici\u00f3 (layerPosition)","text":"id Descripci\u00f3 'top' Posici\u00f3 de la capa per sobre de tots els elements carregats pr\u00e8viament 'labels' Posici\u00f3 de la capa per sota de tots els elements de tipus etiqueta carregats pr\u00e8viament 'lines' Posici\u00f3 de la capa per sota de tots els elements de tipus l\u00ednia, punt i etiqueta carregats pr\u00e8viament"},{"location":"2.3.AddImageLayerICGC/#capes-dimatge-icgc","title":"Capes d'imatge ICGC","text":""},{"location":"2.3.AddImageLayerICGC/#layersortoid","title":"Layers.Orto.{id}","text":"id ortofotoColorProvisional ortofotoColor2022 ortofotoColor2021 ortofotoColor2020 ortofotoColor2019 ortofotoColor2018 ortofotoColor2017 ortofotoColor2016 ortofotoColor2015 ortofotoColor2014 ortofotoColor2013 ortofotoColor2012 ortofotoColor2011 ortofotoColor2010 ortofotoColor2009 ortofotoColor2008 ortofotoColor20062007 ortofotoColor20042005 ortofotoColor20002003 ortofotoBlancINegre1998 ortofotoBlancINegre19941997 ortofotoColor1993 ortofotoBlancINegre19831992 ortofotoBlancINegre19701977 ortofotoBlancINegre1956 ortofotoBlancINegre1945 ortofotoColorSerieAnual ortofotoInfraroigProvisional ortofotoInfraroig2022 ortofotoInfraroig2021 ortofotoInfraroig2020 ortofotoInfraroig2019 ortofotoInfraroig2018 ortofotoInfraroig2017 ortofotoInfraroig2016 ortofotoInfraroig2015 ortofotoInfraroig2014 ortofotoInfraroig2013 ortofotoInfraroig2012 ortofotoInfraroig2011 ortofotoInfraroig2010 ortofotoInfraroig2009 ortofotoInfraroig2008 ortofotoInfraroig20062007 ortofotoInfraroig19961997 ortofotoInfraroigSerieAnual"},{"location":"2.3.AddImageLayerICGC/#layerswmsid","title":"Layers.WMS.{id}","text":"id espaisInteresGeologic gravimetriaBouguer500000 cobertesSol2018 administratiu simplificat cims"},{"location":"2.4.AddVectorLayerICGC/","title":"2.6 Afegir capa vector ICGC","text":""},{"location":"2.4.AddVectorLayerICGC/#exemple","title":"Exemple","text":"<p>.addVectorLayerICGC(url,idLayer,options)</p> <p> See the Pen    Exemple AddMarker by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.4.AddVectorLayerICGC/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple mapicgc-gl-js: Afegir capa vector de l'ICGC&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n      /* personalitza el teu bot\u00f3 de llegenda: */\n      #toggleLegend {\n        position: absolute;\n        top: 20px;\n        right: 20px;\n        background-color: #3f33eb;\n        color: white;\n        width: 40px;\n        height: 40px;\n        border-radius: 50%;\n        text-align: center;\n        line-height: 40px;\n        cursor: pointer;\n        z-index: 1000;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.TOPO,\n          center: [2.1464, 41.306],\n          zoom: 7.4,\n          maxZoom: 19,\n          hash: true,\n          pitch: 0,\n        });\n        map.on(\"load\", () =&gt; {\n          let optionsVectorAdmin = {\n            type: \"line\",\n            layout: {\n              visibility: \"visible\",\n            },\n            paint: {\n              \"line-color\": \"#4832a8\",\n              \"line-opacity\": 1,\n              \"line-width\": 1,\n            },\n            layerPosition: \"top\",\n          };\n\n          let optionsVector = {\n            type: \"fill\",\n            layout: {\n              visibility: \"visible\",\n            },\n            paint: {\n              \"fill-color\": \"red\",\n            },\n            layerPosition: \"top\",\n          };\n          map.addVectorLayerICGC(\n            data.Layers.Vector.cobertes2018,\n            \"Cobertes\",\n            optionsVector\n          );\n          map.addVectorLayerICGC(\n            data.Layers.VectorAdmin.municipisVigent,\n            \"municipisVigent\",\n            optionsVectorAdmin\n          );\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"2.4.AddVectorLayerICGC/#posicio-position","title":"Posici\u00f3 (position)","text":"id Descripci\u00f3 'top' Posici\u00f3 de la capa per sobre de tots els elements carregats pr\u00e8viament 'labels' Posici\u00f3 de la capa per sota de tots els elements de tipus etiqueta carregats pr\u00e8viament 'lines' Posici\u00f3 de la capa per sota de tots els elements de tipus l\u00ednia, punt i etiqueta carregats pr\u00e8viament"},{"location":"2.4.AddVectorLayerICGC/#capes-vector-icgc","title":"Capes vector ICGC","text":""},{"location":"2.4.AddVectorLayerICGC/#layersvectoradminid","title":"Layers.VectorAdmin.{id}","text":"id agrupacionsCensals2015 agrupacionsCensals2016 agrupacionsCensals2017 agrupacionsCensals2018 agrupacionsCensals2019 agrupacionsCensals2020 agrupacionsCensals2021 agrupacionsCensalsVigent agrupacionsCensalsVigentText areesBasiquesPolicials2019 areesBasiquesPolicials2020 areesBasiquesPolicials2022 areesBasiquesPolicialsVigent areesBasiquesPolicialsVigentText areesBasiquesSalutVigent areesBasiquesServeisSocialsVigent areesBasiquesServeisSocialsVigentText areesGestioAssistencialVigent areesHidrogeologiquesAquifersVigent catalunyaVigent catalunyaVigentText comarques2022 comarquesVigent comarquesVigentText districtesCensals2015 districtesCensals2016 districtesCensals2017 districtesCensals2018 districtesCensals2019 districtesCensals2020 districtesCensals2021 districtesCensals2022 districtesCensals2023 districtesCensalsVigent districtesCensalsVigentText incendisForestalsVigent incendisForestalsVigentText municipis2022 municipis2022Text municipisVigent municipisVigentText partitsJudicialsVigent partitsJudicialsVigentText plaTerritorial2015 plaTerritorialVigent plaTerritorialVigentText provinciesVigent provinciesVigentText regionsPolicialsVigent regionsPolicialsVigentText regionsSanitariesVigent regionsSanitariesVigentText seccionsCensals2015 seccionsCensals2016 seccionsCensals2017 seccionsCensals2018 seccionsCensals2019 seccionsCensals2020 seccionsCensals2021 seccionsCensals2022 seccionsCensals2023 seccionsCensalsVigent seccionsCensalsVigentText sectorsSanitarisVigent vegueriesVigent vegueriesVigentText"},{"location":"2.4.AddVectorLayerICGC/#layersvectorid","title":"Layers.Vector.{id}","text":"id cobertes2018"},{"location":"2.5.AddLayerGeojson/","title":"2.7 Afegir capa GeoJSON","text":""},{"location":"2.5.AddLayerGeojson/#exemple","title":"Exemple","text":"<p>.addLayerGeoJSON(url,idLayer,options)</p> <p> See the Pen    Exemple AddMarker by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.5.AddLayerGeojson/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple mapicgc-gl-js: Afegir capa&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.TOPO,\n          center: [1.001, 41.759],\n          zoom: 7.4,\n          maxZoom: 19,\n          hash: true,\n          pitch: 0,\n        });\n\n        map.on(\"load\", () =&gt; {\n          let geojsonLayer = {\n            id: \"geojsonTest\",\n            data: {\n              type: \"Feature\",\n              geometry: {\n                type: \"Polygon\",\n                coordinates: [\n                  [\n                    [1.3119, 41.489],\n                    [1.0119, 41.489],\n                    [1.0119, 42.0489],\n                    [1.3119, 42.0489],\n                  ],\n                ],\n              },\n            },\n            type: \"fill\",\n            layout: {},\n            paint: {\n              \"fill-color\": \"#088\",\n              \"fill-opacity\": 0.8,\n            },\n          };\n          let layerPosition = \"labels\"; // select: 'top', 'lines' or 'labels'\n          map.addLayerGeoJSON(geojsonLayer, layerPosition);\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"2.5.AddLayerGeojson/#posicio-position","title":"Posici\u00f3 (position)","text":"id Descripci\u00f3 'top' Posici\u00f3 de la capa per sobre de tots els elements carregats pr\u00e8viament 'labels' Posici\u00f3 de la capa per sota de tots els elements de tipus etiqueta carregats pr\u00e8viament 'lines' Posici\u00f3 de la capa per sota de tots els elements de tipus l\u00ednia, punt i etiqueta carregats pr\u00e8viament"},{"location":"2.6.AddLayerTree/","title":"2.8 Afegir llistat de capes","text":""},{"location":"2.6.AddLayerTree/#exemple","title":"Exemple","text":"<p>.addLayerTree(options)</p> <p> See the Pen    Exemple AddMarker by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.6.AddLayerTree/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple mapicgc-gl-js: Afegir arbre de capes&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n    &lt;nav id=\"filter-group\" class=\"filter-group\"&gt;&lt;/nav&gt;\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.TOPO,\n          center: [2.1464, 41.306],\n          zoom: 6.4,\n          maxZoom: 19,\n          hash: true,\n          pitch: 0,\n        });\n\n        let options = {\n          features: {\n            type: \"FeatureCollection\",\n            features: [\n              {\n                type: \"Feature\",\n                properties: {\n                  icon: \"Rub\u00ed\",\n                },\n                geometry: {\n                  type: \"Point\",\n                  coordinates: [2.0119, 41.489],\n                },\n              },\n\n              {\n                type: \"Feature\",\n                properties: {\n                  icon: \"Moi\u00e0\",\n                },\n                geometry: {\n                  type: \"Point\",\n                  coordinates: [2.119, 41.87],\n                },\n              },\n              {\n                type: \"Feature\",\n                properties: {\n                  icon: \"Les Borges Blanques\",\n                },\n                geometry: {\n                  type: \"Point\",\n                  coordinates: [0.97319, 41.4589],\n                },\n              },\n              {\n                type: \"Feature\",\n                properties: {\n                  icon: \"Berga\",\n                },\n                geometry: {\n                  type: \"Point\",\n                  coordinates: [1.83, 42.163],\n                },\n              },\n            ],\n          },\n          id: \"testLayer\",\n          type: \"geojson\",\n        };\n        map.on(\"load\", () =&gt; {\n          map.addLayerTree(options);\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"2.7.AddMarker/","title":"2.9 Afegir marker","text":""},{"location":"2.7.AddMarker/#exemple","title":"Exemple","text":"<p>.addmarker(options)</p> <p> See the Pen    Exemple AddMarker by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.7.AddMarker/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple mapicgc-gl-js: Afegir marcador&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n      .maplibregl-popup-close-button {\n        color: blue;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.TOPO,\n          center: [2.1464, 41.306],\n          zoom: 7.4,\n          maxZoom: 19,\n          hash: true,\n          pitch: 0,\n        });\n        let optionsMarker = {\n          coord: [2.119, 41.87],\n          text: \"Hola Test\",\n          textOffset: 25,\n          options: {color:\"#D08288\"},\n        };\n        map.on(\"load\", () =&gt; {\n          map.addMarker(optionsMarker);\n          map.addFullscreenControl({}, \"top-right\");\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"2.8.AddControl/","title":"2.10 Afegir control","text":""},{"location":"2.8.AddControl/#exemple","title":"Exemple","text":"<p>.addControl(control,position)</p> <p> See the Pen    Exemple AddMarker by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.8.AddControl/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple mapicgc-gl-js: Afegir control&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;link\n      rel=\"stylesheet\"\n      href=\"https://unpkg.com/maplibre-gl@4.0.0/dist/maplibre-gl.css\"\n    /&gt;\n    &lt;script src=\"https://unpkg.com/maplibre-gl@4.0.0/dist/maplibre-gl.js\"&gt;&lt;/script&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"map\"&gt;&lt;/div&gt;\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n        const map = new mapicgcgl.Map({\n          container: \"map\",\n          style: data.Styles.TOPO,\n          center: [2.1464, 41.306],\n          zoom: 7.4,\n          maxZoom: 19,\n          hash: true,\n          pitch: 0,\n        });\n        map.on(\"load\", () =&gt; {\n          // mapicgc-gl-js libreria:\n          map.addFullscreenControl({}, \"top-right\");\n          map.addGeolocateControl(\n            {\n              positionOptions: {\n                enableHighAccuracy: true,\n              },\n              trackUserLocation: true,\n            },\n            \"bottom-right\"\n          );\n\n          //control export amb opcions\n          // map.addExportControl(\n          //   {\n          //     PageSize: Size.A4,\n          //     PageOrientation: PageOrientation.Landscape,\n          //     Format: Format.PNG,\n          //     DPI: DPI[300],\n          //     Crosshair: true,\n          //     PrintableArea: true,\n          //   },\n          //   \"bottom-right\"\n          // );\n          //control export per defecte\n          map.addExportControl();\n\n          // control d'una llibreria externa\n          map.addControl(new maplibregl.NavigationControl(), \"bottom-right\");\n        });\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"2.8.AddControl/#addgeolocatecontroloptions-position","title":"addGeolocateControl(options, position)","text":"<pre><code>map.addGeolocateControl(); ; //default version \nmap.addGeolocateControl({\npositionOptions: { enableHighAccuracy: true }, trackUserLocation: true\n},\"bottom-right\")\n</code></pre>"},{"location":"2.8.AddControl/#addexportcontroloptions-position","title":"addExportControl(options, position)","text":"<pre><code>map.addExportControl() ; //default version \nmap.addExportControl({ PageSize:\nSize.A4, PageOrientation:PageOrientation.Landscape, Format: Format.PNG, DPI:\nDPI[300], Crosshair: true, PrintableArea: true, }, \"bottom-right\")\n</code></pre>"},{"location":"2.8.AddControl/#addmousecoordcontroloptions-position","title":"addMouseCoordControl(options, position)","text":"<pre><code>map.addMouseCoordControl(); //default version\nmap.addMouseCoordControl({width:'225px',utm:true,lonlat:true},\"bottom-left\");\n</code></pre>"},{"location":"2.8.AddControl/#addfullscreencontroloptions-position","title":"addFullscreenControl(options, position)","text":"<pre><code>map.addFullscreenControl(); //default version\nmap.addFullscreenControl({container: HTMLElement}, 'top-right');\n</code></pre>"},{"location":"2.8.AddControl/#addscalecontroloptions-position","title":"addScaleControl(options, position)","text":"<pre><code>map.addScaleControl(); //default version \nmap.addScaleControl({maxWidth: 100,\nunit: 'metric' ('imperial', 'metric' or 'nautical')}, \"top-right\");\n</code></pre>"},{"location":"2.8.AddControl/#addnavigationcontroloptions-position","title":"addNavigationControl(options, position)","text":"<pre><code>map.addNavigationControl(); //default version\nmap.addMouseCoordControl({showCompass: true, showZoom: true, visualizePitch:\ntrue}, \"top-right\");\n</code></pre>"},{"location":"2.8.AddControl/#addattributioncontroloptions-position","title":"addAttributionControl(options, position)","text":"<pre><code>map.addAttributionControl(); //default version\nmap.addAttributionControl({compact: true, customAttribution: \"your custom\nattribution\" }, \"bottom-right\");\n</code></pre>"},{"location":"2.9.AddCompare/","title":"2.11 Afegir comparador","text":""},{"location":"2.9.AddCompare/#exemple","title":"Exemple","text":"<p>.CompareMaps(options)</p> <p> See the Pen    CompareMaps by unitatgeostart (@unitatgeostart)   on CodePen. </p> <p>CodePen</p>"},{"location":"2.9.AddCompare/#codi","title":"Codi","text":"<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Exemple mapicgc-gl-js: Afegir comparador&lt;/title&gt;\n    &lt;meta\n      name=\"viewport\"\n      content=\"initial-scale=1,maximum-scale=1,user-scalable=no\"\n    /&gt;\n    &lt;script src=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.js\"&gt;&lt;/script&gt;\n    &lt;link\n      href=\"https://tilemaps.icgc.cat/cdn/mapicgc-gl-js/mapicgc-gl.css\"\n      rel=\"stylesheet\"\n    /&gt;\n\n    &lt;style&gt;\n      body {\n        margin: 0;\n        padding: 0;\n      }\n      #map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n      .map {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n      }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"comparison-container\"&gt;\n      &lt;div id=\"before\" class=\"map\"&gt;&lt;/div&gt;\n      &lt;div id=\"after\" class=\"map\"&gt;&lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;script&gt;\n      async function initMap() {\n        const data = await mapicgcgl.Config.getConfigICGC();\n\n        const map1 = new mapicgcgl.Map({\n          container: \"before\",\n          style: data.Styles.ORTO,\n          center: [1.1464, 41.706],\n          zoom: 7.4,\n          maxZoom: 19,\n          hash: true,\n          pitch: 0,\n        });\n\n        const map2 = new mapicgcgl.Map({\n          container: \"after\",\n          style: data.Styles.TOPO,\n          center: [1.1464, 41.706],\n          zoom: 7.4,\n          maxZoom: 19,\n          hash: true,\n          pitch: 0,\n        });\n\n        var container = \"#comparison-container\";\n\n        var map = new mapicgcgl.CompareMaps(map1, map2, container, {});\n      }\n      initMap();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"3.1.Funcions_doc/","title":"3.1 Funcions","text":""},{"location":"3.1.Funcions_doc/#lnglatbounds","title":"LngLatBounds","text":"<p>LngLatBounds</p> <p>Kind: global class </p>"},{"location":"3.1.Funcions_doc/#new-lnglatboundssw-ne","title":"new LngLatBounds([sw], [ne])","text":"<p>Constructs a new LngLatBounds object representing a geographical bounding box.</p> Param Type Description [sw] <code>LngLatLike</code> The southwest corner of the bounding box. Can be specified as an array of 4 numbers in the order of west, south, east, north, or an array of 2 LngLatLike representing [sw,ne]. [ne] <code>LngLatLike</code> The northeast corner of the bounding box. <p></p>"},{"location":"3.1.Funcions_doc/#addgeocodericgcposition-object","title":"addGeocoderICGC([position]) \u2192<code>Object</code>","text":"<p>Add geocoder.</p> <p>Kind: global function Returns: <code>Object</code> - - The current position of the search result.  </p> Param Type Default Description [position] <code>string</code> <code>\"'top-right'\"</code> Position to add the control on the map. <p></p>"},{"location":"3.1.Funcions_doc/#getconfigstyles-array","title":"getConfigStyles() \u2192<code>Array</code>","text":"<p>Retrieves the available base styles from default options.</p> <p>Kind: global function Returns: <code>Array</code> - - Array containing the names of available base styles. </p>"},{"location":"3.1.Funcions_doc/#getconfigwmslayers-array","title":"getConfigWMSLayers() \u2192<code>Array</code>","text":"<p>Retrieves the available WMS image layers from default options.</p> <p>Kind: global function Returns: <code>Array</code> - - Array containing the keys of available WMS image layers. </p>"},{"location":"3.1.Funcions_doc/#getconfigortolayers-array","title":"getConfigOrtoLayers() \u2192<code>Array</code>","text":"<p>Retrieves the available orto image layers from default options.</p> <p>Kind: global function Returns: <code>Array</code> - - Array containing the keys of available image layers. </p>"},{"location":"3.1.Funcions_doc/#getconfigvectorlayers-array","title":"getConfigVectorLayers() \u2192<code>Array</code>","text":"<p>Retrieves the available vector layers from default options.</p> <p>Kind: global function Returns: <code>Array</code> - - Array containing the keys of available vector layers. </p>"},{"location":"3.1.Funcions_doc/#getconfigvectoradminlayers-array","title":"getConfigVectorAdminLayers() \u2192<code>Array</code>","text":"<p>Retrieves the available vector layers from default options.</p> <p>Kind: global function Returns: <code>Array</code> - - Array containing the keys of available vectorAdmin layers. </p>"},{"location":"3.1.Funcions_doc/#getconfigfgbadminlayers-array","title":"getConfigFGBAdminLayers() \u2192<code>Array</code>","text":"<p>Retrieves the available fgb layers from default options.</p> <p>Kind: global function Returns: <code>Array</code> - - Array containing the keys of available fgbadmin layers. </p>"},{"location":"3.1.Funcions_doc/#fetchdataurl-idlayer-options","title":"fetchData(url, idLayer, options)","text":"<p>Fetches GeoJSON data from a URL and adds a corresponding layer to the map based on the specified geometry type.</p> <p>Kind: global function  </p> Param Type Description url <code>string</code> The URL to fetch GeoJSON data from. idLayer <code>string</code> The id for the layer. options <code>Object</code> Additional options for configuring the layer. <p></p>"},{"location":"3.1.Funcions_doc/#fetchdataandmenuurl-idlayer-filterfield-options","title":"fetchDataAndMenu(url, idLayer, filterField, options)","text":"<p>Fetches GeoJSON data from a URL and adds a corresponding layer to the map based on the specified geometry type and adds to the Menu as a checkbox item.</p> <p>Kind: global function  </p> Param Type Description url <code>string</code> The URL to fetch GeoJSON data from. idLayer <code>string</code> The geometry name (e.g., 'buildings'). filterField <code>string</code> Import all features as unique or group based on a field ('all', 'field'). options <code>Object</code> Additional options for configuring the layer. <p></p>"},{"location":"3.1.Funcions_doc/#ontype-func","title":"on(type, func)","text":"<p>Adds an event listener to the map.</p> <p>Kind: global function  </p> Param Type Description type <code>string</code> The type of the event. func <code>function</code> The callback function to be executed when the event occurs. <p></p>"},{"location":"3.1.Funcions_doc/#setstylestyle-options","title":"setStyle(style, [options])","text":"<p>Sets the style of the map.</p> <p>Kind: global function  </p> Param Type Description style <code>string</code> Name of the map style. [options] <code>Object</code> Options for setting the style. <p></p>"},{"location":"3.1.Funcions_doc/#addcontrolcontrol-position","title":"addControl(control, [position])","text":"<p>Adds a control to the map with the specified position.</p> <p>Kind: global function  </p> Param Type Default Description control <code>Object</code> The control to add. [position] <code>string</code> <code>\"'top-right'\"</code> Position to add the control on the map. <p></p>"},{"location":"3.1.Funcions_doc/#addmousecoordcontrolposition","title":"addMouseCoordControl([position])","text":"<p>Adds a mouse coordinate control to the map.</p> <p>Kind: global function  </p> Param Type Default Description options.width <code>Number</code> Width control i. options.utm <code>Boolean</code> Boolean to show coordinates in UTM. options.lonlat <code>Boolean</code> Boolean to show coordinates in Lon Lat. [position] <code>string</code> <code>\"'bottom-left'\"</code> Position to add the control on the map. <p></p>"},{"location":"3.1.Funcions_doc/#addgeolocatecontroloptions-position","title":"addGeolocateControl(options, [position])","text":"<p>Adds a geolocate control to the map.</p> <p>Kind: global function  </p> Param Type Default Description options <code>Object</code> Options for the geolocate control. [position] <code>string</code> <code>\"'top-right'\"</code> Position to add the control on the map. <p></p>"},{"location":"3.1.Funcions_doc/#addfullscreencontroloptions-position","title":"addFullscreenControl(options, [position])","text":"<p>Adds a fullscreen control to the map.</p> <p>Kind: global function  </p> Param Type Default Description options <code>Object</code> Options for the geolocate control. [position] <code>string</code> <code>\"'top-right'\"</code> Position to add the control on the map. <p></p>"},{"location":"3.1.Funcions_doc/#addlayerlayer-layeridorder","title":"addLayer(layer, layerIdOrder)","text":"<p>Adds a layer to the map.</p> <p>Kind: global function  </p> Param Type Description layer <code>Object</code> Options for the layer to add. layerIdOrder <code>string</code> Optional layer Id draw position. <p></p>"},{"location":"3.1.Funcions_doc/#addimageid-image-options-this","title":"addImage(id, image, options) \u2192<code>this</code>","text":"<p>Adds an image to the map.</p> <p>Kind: global function  </p> Param Type Description id <code>string</code> The ID of the image. image <code>ImageBitmap</code> | <code>HTMLImageElement</code> | <code>ImageData</code> | <code>StyleImageInterface</code> | <code>object</code> The image object to add. options <code>Partial.&lt;StyleImageMetadata&gt;</code> Optional metadata for the image. <p></p>"},{"location":"3.1.Funcions_doc/#addsourceid-source-this","title":"addSource(id, source) \u2192<code>this</code>","text":"<p>Adds a source to the map.</p> <p>Kind: global function  </p> Param Type Description id <code>string</code> The ID of the source. source <code>SourceSpecification</code> The source object to add. <p></p>"},{"location":"3.1.Funcions_doc/#addspriteid-url-options-this","title":"addSprite(id, url, options) \u2192<code>this</code>","text":"<p>Adds a sprite to the map.</p> <p>Kind: global function  </p> Param Type Description id <code>string</code> The ID of the sprite. url <code>string</code> The URL to load the sprite from. options <code>StyleSetterOptions</code> Options object. <p></p>"},{"location":"3.1.Funcions_doc/#aretilesloaded-boolean","title":"areTilesLoaded() \u2192<code>boolean</code>","text":"<p>Checks if all tiles in the viewport are loaded.</p> <p>Kind: global function </p>"},{"location":"3.1.Funcions_doc/#cameraforboundsbounds-options-centerzoombearing-undefined","title":"cameraForBounds(bounds, options) \u2192<code>CenterZoomBearing</code> | <code>undefined</code>","text":"<p>Calculates the camera position for given bounds.</p> <p>Kind: global function  </p> Param Type Description bounds <code>LngLatBoundsLike</code> The geographical bounds to fit. options <code>CameraForBoundsOptions</code> Options object. <p></p>"},{"location":"3.1.Funcions_doc/#easetooptions-eventdata-this","title":"easeTo(options, eventData) \u2192<code>this</code>","text":"<p>Eases the camera to a new position.</p> <p>Kind: global function  </p> Param Type Description options <code>object</code> Options describing the animation. eventData <code>any</code> Additional properties for event objects. <p></p>"},{"location":"3.1.Funcions_doc/#fitboundsbounds-options-eventdata-this","title":"fitBounds(bounds, options, eventData) \u2192<code>this</code>","text":"<p>Fits the map to the given geographical bounds.</p> <p>Kind: global function  </p> Param Type Description bounds <code>LngLatBoundsLike</code> The geographical bounds to fit. options <code>FitBoundsOptions</code> Options object. eventData <code>any</code> Additional properties for event objects. <p></p>"},{"location":"3.1.Funcions_doc/#fitscreencoordinatesp0-p1-bearing-options-eventdata-this","title":"fitScreenCoordinates(p0, p1, bearing, options, eventData) \u2192<code>this</code>","text":"<p>Fits the map to the given screen coordinates.</p> <p>Kind: global function  </p> Param Type Description p0 <code>PointLike</code> First point on screen, in pixel coordinates. p1 <code>PointLike</code> Second point on screen, in pixel coordinates. bearing <code>number</code> Desired map bearing at end of animation, in degrees. options <code>FitBoundsOptions</code> Options object. eventData <code>any</code> Additional properties for event objects. <p></p>"},{"location":"3.1.Funcions_doc/#flytooptions-eventdata-this","title":"flyTo(options, eventData) \u2192<code>this</code>","text":"<p>Flies the camera to a new position.</p> <p>Kind: global function  </p> Param Type Description options <code>FlyToOptions</code> Options describing the flight. eventData <code>any</code> Additional properties for event objects. <p></p>"},{"location":"3.1.Funcions_doc/#getbearing-number","title":"getBearing() \u2192<code>number</code>","text":"<p>Gets the current bearing of the map.</p> <p>Kind: global function </p>"},{"location":"3.1.Funcions_doc/#getbounds-lnglatbounds","title":"getBounds() \u2192<code>LngLatBounds</code>","text":"<p>Gets the current geographical bounds of the map.</p> <p>Kind: global function </p>"},{"location":"3.1.Funcions_doc/#getcameratargetelevation-number","title":"getCameraTargetElevation() \u2192<code>number</code>","text":"<p>Gets the elevation for the point where the camera is looking.</p> <p>Kind: global function </p>"},{"location":"3.1.Funcions_doc/#getcanvas-htmlcanvaselement","title":"getCanvas() \u2192<code>HTMLCanvasElement</code>","text":"<p>Gets the map's  element. <p>Kind: global function </p>"},{"location":"3.1.Funcions_doc/#getcanvascontainer-htmlelement","title":"getCanvasContainer() \u2192<code>HTMLElement</code>","text":"<p>Gets the HTML element containing the map's  element. <p>Kind: global function </p>"},{"location":"3.1.Funcions_doc/#getcenter-lnglat","title":"getCenter() \u2192<code>LngLat</code>","text":"<p>Returns the map's geographical centerpoint.</p> <p>Kind: global function Returns: <code>LngLat</code> - The map's geographical centerpoint. </p>"},{"location":"3.1.Funcions_doc/#getcontainer-htmlelement","title":"getContainer() \u2192<code>HTMLElement</code>","text":"<p>Returns the map's containing HTML element.</p> <p>Kind: global function Returns: <code>HTMLElement</code> - The map's container. </p>"},{"location":"3.1.Funcions_doc/#getfeaturestatefeature-any","title":"getFeatureState(feature) \u2192<code>any</code>","text":"<p>Gets the state of a feature.</p> <p>Kind: global function Returns: <code>any</code> - The state of the feature.  </p> Param Type Description feature <code>FeatureIdentifier</code> Feature identifier. <p></p>"},{"location":"3.1.Funcions_doc/#getfilterlayerid-void-filterspecification","title":"getFilter(layerId) \u2192<code>void</code> | <code>FilterSpecification</code>","text":"<p>Returns the filter applied to the specified style layer.</p> <p>Kind: global function Returns: <code>void</code> | <code>FilterSpecification</code> - The layer's filter.  </p> Param Type Description layerId <code>string</code> The ID of the style layer. <p></p>"},{"location":"3.1.Funcions_doc/#getglyphs-string","title":"getGlyphs() \u2192<code>string</code>","text":"<p>Returns the value of the style's glyphs URL.</p> <p>Kind: global function Returns: <code>string</code> - The glyphs Style's glyphs URL. </p>"},{"location":"3.1.Funcions_doc/#getimageid-styleimage","title":"getImage(id) \u2192<code>StyleImage</code>","text":"<p>Returns an image currently available in the map.</p> <p>Kind: global function Returns: <code>StyleImage</code> - An image in the map with the specified ID.  </p> Param Type Description id <code>string</code> The ID of the image. <p></p>"},{"location":"3.1.Funcions_doc/#getlayerid-stylelayer","title":"getLayer(id) \u2192<code>StyleLayer</code>","text":"<p>Returns the layer with the specified ID in the map's style.</p> <p>Kind: global function Returns: <code>StyleLayer</code> - The layer with the specified ID.  </p> Param Type Description id <code>string</code> The ID of the layer to get. <p></p>"},{"location":"3.1.Funcions_doc/#getlayersorder-arraystring","title":"getLayersOrder() \u2192<code>Array.&lt;string&gt;</code>","text":"<p>Return the ids of all layers currently in the style, including custom layers, in order.</p> <p>Kind: global function Returns: <code>Array.&lt;string&gt;</code> - Ids of layers, in order. </p>"},{"location":"3.1.Funcions_doc/#getlayoutpropertylayerid-name-any","title":"getLayoutProperty(layerId, name) \u2192<code>any</code>","text":"<p>Returns the value of a layout property in the specified style layer.</p> <p>Kind: global function Returns: <code>any</code> - The value of the specified layout property.  </p> Param Type Description layerId <code>string</code> The ID of the layer. name <code>string</code> The name of the layout property. <p></p>"},{"location":"3.1.Funcions_doc/#getlight-lightspecification","title":"getLight() \u2192<code>LightSpecification</code>","text":"<p>Returns the value of the light object.</p> <p>Kind: global function Returns: <code>LightSpecification</code> - Light properties of the style. </p>"},{"location":"3.1.Funcions_doc/#getmaxbounds-lnglatbounds","title":"getMaxBounds() \u2192<code>LngLatBounds</code>","text":"<p>Returns the maximum geographical bounds the map is constrained to.</p> <p>Kind: global function Returns: <code>LngLatBounds</code> - The map's maximum geographical bounds. </p>"},{"location":"3.1.Funcions_doc/#getmaxpitch-number","title":"getMaxPitch() \u2192<code>number</code>","text":"<p>Returns the map's maximum allowable pitch.</p> <p>Kind: global function Returns: <code>number</code> - The maxPitch. </p>"},{"location":"3.1.Funcions_doc/#getmaxzoom-number","title":"getMaxZoom() \u2192<code>number</code>","text":"<p>Returns the map's maximum allowable zoom level.</p> <p>Kind: global function Returns: <code>number</code> - The maxZoom. </p>"},{"location":"3.1.Funcions_doc/#getminpitch-number","title":"getMinPitch() \u2192<code>number</code>","text":"<p>Returns the map's minimum allowable pitch.</p> <p>Kind: global function Returns: <code>number</code> - The minPitch. </p>"},{"location":"3.1.Funcions_doc/#getminzoom-number","title":"getMinZoom() \u2192<code>number</code>","text":"<p>Returns the map's minimum allowable zoom level.</p> <p>Kind: global function Returns: <code>number</code> - The minZoom. </p>"},{"location":"3.1.Funcions_doc/#getpadding-paddingoptions","title":"getPadding() \u2192<code>PaddingOptions</code>","text":"<p>Returns the current padding applied around the map viewport.</p> <p>Kind: global function Returns: <code>PaddingOptions</code> - The current padding around the map viewport. </p>"},{"location":"3.1.Funcions_doc/#getpaintpropertylayerid-name-unknown","title":"getPaintProperty(layerId, name) \u2192<code>unknown</code>","text":"<p>Returns the value of a paint property in the specified style layer.</p> <p>Kind: global function Returns: <code>unknown</code> - The value of the specified paint property.  </p> Param Type Description layerId <code>string</code> The ID of the layer. name <code>string</code> The name of a paint property. <p></p>"},{"location":"3.1.Funcions_doc/#getpitch-number","title":"getPitch() \u2192<code>number</code>","text":"<p>Returns the map's current pitch (tilt).</p> <p>Kind: global function Returns: <code>number</code> - The map's current pitch, measured in degrees away from the plane of the screen. </p>"},{"location":"3.1.Funcions_doc/#getpixelratio-number","title":"getPixelRatio() \u2192<code>number</code>","text":"<p>Returns the map's pixel ratio.</p> <p>Kind: global function Returns: <code>number</code> - The pixel ratio. </p>"},{"location":"3.1.Funcions_doc/#getrenderworldcopies-boolean","title":"getRenderWorldCopies() \u2192<code>boolean</code>","text":"<p>Returns the state of renderWorldCopies.</p> <p>Kind: global function Returns: <code>boolean</code> - The renderWorldCopies. </p>"},{"location":"3.1.Funcions_doc/#getsourceid-source","title":"getSource(id) \u2192<code>Source</code>","text":"<p>Returns the source with the specified ID in the map's style.</p> <p>Kind: global function Returns: <code>Source</code> - The style source with the specified ID.  </p> Param Type Description id <code>string</code> The ID of the source to get. <p></p>"},{"location":"3.1.Funcions_doc/#getsprite-arrayobject","title":"getSprite() \u2192<code>Array.&lt;object&gt;</code>","text":"<p>Returns the as-is value of the style's sprite.</p> <p>Kind: global function Returns: <code>Array.&lt;object&gt;</code> - Style's sprite list of id-url pairs. </p>"},{"location":"3.1.Funcions_doc/#getstyle-stylespecification","title":"getStyle() \u2192<code>StyleSpecification</code>","text":"<p>Returns the map's MapLibre style object.</p> <p>Kind: global function Returns: <code>StyleSpecification</code> - The map's style JSON object. </p>"},{"location":"3.1.Funcions_doc/#getterrain-terrainspecification","title":"getTerrain() \u2192<code>TerrainSpecification</code>","text":"<p>Get the terrain-options if terrain is loaded.</p> <p>Kind: global function Returns: <code>TerrainSpecification</code> - The TerrainSpecification passed to setTerrain. </p>"},{"location":"3.1.Funcions_doc/#getzoom-number","title":"getZoom() \u2192<code>number</code>","text":"<p>Returns the map's current zoom level.</p> <p>Kind: global function Returns: <code>number</code> - The map's current zoom level. </p>"},{"location":"3.1.Funcions_doc/#hascontrolcontrol-boolean","title":"hasControl(control) \u2192<code>boolean</code>","text":"<p>Checks if a control exists on the map.</p> <p>Kind: global function Returns: <code>boolean</code> - true if map contains control.  </p> Param Type Description control <code>IControl</code> The IControl to check. <p></p>"},{"location":"3.1.Funcions_doc/#hasimageid-boolean","title":"hasImage(id) \u2192<code>boolean</code>","text":"<p>Check whether or not an image with a specific ID exists in the style.</p> <p>Kind: global function Returns: <code>boolean</code> - A Boolean indicating whether the image exists.  </p> Param Type Description id <code>string</code> The ID of the image. <p></p>"},{"location":"3.1.Funcions_doc/#ismoving-boolean","title":"isMoving() \u2192<code>boolean</code>","text":"<p>Returns true if the map is panning, zooming, rotating, or pitching due to a camera animation or user gesture.</p> <p>Kind: global function Returns: <code>boolean</code> - true if the map is moving. </p>"},{"location":"3.1.Funcions_doc/#isrotating-boolean","title":"isRotating() \u2192<code>boolean</code>","text":"<p>Returns true if the map is rotating due to a camera animation or user gesture.</p> <p>Kind: global function Returns: <code>boolean</code> - true if the map is rotating. </p>"},{"location":"3.1.Funcions_doc/#issourceloadedid-boolean","title":"isSourceLoaded(id) \u2192<code>boolean</code>","text":"<p>Returns a Boolean indicating whether the source is loaded.</p> <p>Kind: global function Returns: <code>boolean</code> - A Boolean indicating whether the source is loaded.  </p> Param Type Description id <code>string</code> The ID of the source to be checked. <p></p>"},{"location":"3.1.Funcions_doc/#isstyleloaded-boolean-void","title":"isStyleLoaded() \u2192<code>boolean</code> | <code>void</code>","text":"<p>Returns a Boolean indicating whether the map's style is fully loaded.</p> <p>Kind: global function Returns: <code>boolean</code> | <code>void</code> - A Boolean indicating whether the style is fully loaded. </p>"},{"location":"3.1.Funcions_doc/#iszooming-boolean","title":"isZooming() \u2192<code>boolean</code>","text":"<p>Returns true if the map is zooming due to a camera animation or user gesture.</p> <p>Kind: global function Returns: <code>boolean</code> - true if the map is zooming. </p>"},{"location":"3.1.Funcions_doc/#jumptooptions-eventdata-this","title":"jumpTo(options, [eventData]) \u2192<code>this</code>","text":"<p>Changes any combination of center, zoom, bearing, and pitch, without an animated transition.</p> <p>Kind: global function  </p> Param Type Description options <code>JumpToOptions</code> Options object [eventData] <code>any</code> Additional properties to be added to event objects of events triggered by this method. <p></p>"},{"location":"3.1.Funcions_doc/#listimages-arraystring","title":"listImages() \u2192<code>Array.&lt;string&gt;</code>","text":"<p>Returns an Array of strings containing the IDs of all images currently available in the map.</p> <p>Kind: global function Returns: <code>Array.&lt;string&gt;</code> - An Array of strings containing the names of all sprites/images currently available in the map. </p>"},{"location":"3.1.Funcions_doc/#listenstype-boolean","title":"listens(type) \u2192<code>boolean</code>","text":"<p>Returns a true if this instance of Evented or any forwardeed instances of Evented have a listener for the specified type.</p> <p>Kind: global function Returns: <code>boolean</code> - true if there is at least one registered listener for specified event type, false otherwise.  </p> Param Type Description type <code>string</code> The event type. <p></p>"},{"location":"3.1.Funcions_doc/#loadimageurl-promisegetresourceresponseimagebitmaphtmlimageelement","title":"loadImage(url) \u2192<code>Promise.&lt;GetResourceResponse.&lt;(ImageBitmap|HTMLImageElement)&gt;&gt;</code>","text":"<p>Load an image from an external URL to be used with Map#addImage.</p> <p>Kind: global function Returns: <code>Promise.&lt;GetResourceResponse.&lt;(ImageBitmap|HTMLImageElement)&gt;&gt;</code> - A promise that is resolved when the image is loaded.  </p> Param Type Description url <code>string</code> The URL of the image file. Image file must be in png, webp, or jpg format. <p></p>"},{"location":"3.1.Funcions_doc/#loaded-boolean","title":"loaded() \u2192<code>boolean</code>","text":"<p>Returns a Boolean indicating whether the map is fully loaded.</p> <p>Kind: global function Returns: <code>boolean</code> - A Boolean indicating whether the map is fully loaded. </p>"},{"location":"3.1.Funcions_doc/#addprotocolcustomprotocol-loadfn-void","title":"addProtocol(customProtocol, loadFn) \u2192<code>void</code>","text":"<p>Adds a custom load resource function that will be called when using a URL that starts with a custom URL schema.</p> <p>Kind: global function  </p> Param Type Description customProtocol <code>string</code> The protocol to hook, for example 'custom'. loadFn <code>AddProtocolAction</code> The function to use when trying to fetch a resource specified by the customProtocol. <p></p>"},{"location":"3.1.Funcions_doc/#movelayerid-beforeid-this","title":"moveLayer(id, [beforeId]) \u2192<code>this</code>","text":"<p>Moves a layer to a different z-position.</p> <p>Kind: global function  </p> Param Type Description id <code>string</code> The ID of the layer to move. [beforeId] <code>string</code> The ID of an existing layer to insert the new layer before. <p></p>"},{"location":"3.1.Funcions_doc/#panbyoffset-options-eventdata-this","title":"panBy(offset, [options], [eventData]) \u2192<code>this</code>","text":"<p>Pans the map by the specified offset.</p> <p>Kind: global function  </p> Param Type Description offset <code>PointLike</code> x and y coordinates by which to pan the map. [options] <code>AnimationOptions</code> Options object. [eventData] <code>any</code> Additional properties to be added to event objects of events triggered by this method. <p></p>"},{"location":"3.1.Funcions_doc/#pantolnglat-options-eventdata-this","title":"panTo(lnglat, [options], [eventData]) \u2192<code>this</code>","text":"<p>Pans the map to the specified location with an animated transition.</p> <p>Kind: global function  </p> Param Type Description lnglat <code>LngLatLike</code> The location to pan the map to. [options] <code>AnimationOptions</code> Options describing the destination and animation of the transition. [eventData] <code>any</code> Additional properties to be added to event objects of events triggered by this method. <p></p>"},{"location":"3.1.Funcions_doc/#projectlnglat-point","title":"project(lnglat) \u2192<code>Point</code>","text":"<p>Returns a Point representing pixel coordinates, relative to the map's container, that correspond to the specified geographical location.</p> <p>Kind: global function Returns: <code>Point</code> - The Point corresponding to lnglat, relative to the map's container.  </p> Param Type Description lnglat <code>LngLatLike</code> The geographical location to project. <p></p>"},{"location":"3.1.Funcions_doc/#queryrenderedfeaturesgeometryoroptions-options-array","title":"queryRenderedFeatures([geometryOrOptions], [options]) \u2192<code>Array</code>","text":"<p>Queries rendered features within a specified geometry or bounding box.</p> <p>Kind: global function Returns: <code>Array</code> - An array of GeoJSON Feature objects representing the features that intersect the query geometry.  </p> Param Type Description [geometryOrOptions] <code>GeometryLike</code> | <code>Array</code> | <code>Object</code> The geometry or options for the query. [options] <code>Object</code> Options for the query. <p></p>"},{"location":"3.1.Funcions_doc/#querysourcefeaturessourceid-parameters-array","title":"querySourceFeatures(sourceId, parameters) \u2192<code>Array</code>","text":"<p>Queries source features within a specified source.</p> <p>Kind: global function Returns: <code>Array</code> - An array of GeoJSON Feature objects representing the features in the source that satisfy the query parameters.  </p> Param Type Description sourceId <code>string</code> The ID of the source to query. parameters <code>Object</code> Parameters for the query. <p></p>"},{"location":"3.1.Funcions_doc/#queryterrainelevationlnglatlike-number","title":"queryTerrainElevation(lngLatLike) \u2192<code>number</code>","text":"<p>Queries the terrain elevation at a specified geographical location.</p> <p>Kind: global function Returns: <code>number</code> - The elevation (in meters) at the specified location.  </p> Param Type Description lngLatLike <code>LngLatLike</code> The geographical location to query. <p></p>"},{"location":"3.1.Funcions_doc/#redraw-this","title":"redraw() \u2192<code>this</code>","text":"<p>Redraws the map.</p> <p>Kind: global function </p>"},{"location":"3.1.Funcions_doc/#remove-this","title":"remove() \u2192<code>this</code>","text":"<p>Removes the map from the DOM.</p> <p>Kind: global function </p>"},{"location":"3.1.Funcions_doc/#removecontrolcontrol-this","title":"removeControl(control) \u2192<code>this</code>","text":"<p>Removes a control from the map.</p> <p>Kind: global function  </p> Param Type Description control <code>Object</code> The control to remove. <p></p>"},{"location":"3.1.Funcions_doc/#removefeaturestatetarget-key-this","title":"removeFeatureState(target, [key]) \u2192<code>this</code>","text":"<p>Removes the state of a feature.</p> <p>Kind: global function  </p> Param Type Description target <code>Object</code> The target feature. [key] <code>string</code> The key of the state to remove. <p></p>"},{"location":"3.1.Funcions_doc/#removeimageid-this","title":"removeImage(id) \u2192<code>this</code>","text":"<p>Removes an image from the style's sprite.</p> <p>Kind: global function  </p> Param Type Description id <code>string</code> The ID of the image to remove. <p></p>"},{"location":"3.1.Funcions_doc/#removelayeridlayer","title":"removeLayer(idLayer)","text":"<p>Removes a layer from the map.</p> <p>Kind: global function  </p> Param Type Description idLayer <code>string</code> Identifier of the layer to remove. <p></p>"},{"location":"3.1.Funcions_doc/#removesourceidlayer","title":"removeSource(idLayer)","text":"<p>Removes a source from the map.</p> <p>Kind: global function  </p> Param Type Description idLayer <code>string</code> Identifier of the source to remove. <p></p>"},{"location":"3.1.Funcions_doc/#removespriteid-this","title":"removeSprite(id) \u2192<code>this</code>","text":"<p>Removes a sprite from the style.</p> <p>Kind: global function  </p> Param Type Description id <code>string</code> The ID of the sprite to remove. <p></p>"},{"location":"3.1.Funcions_doc/#resetnorthoptions-eventdata-this","title":"resetNorth([options], [eventData]) \u2192<code>this</code>","text":"<p>Resets the map orientation so that north is up.</p> <p>Kind: global function  </p> Param Type Description [options] <code>Object</code> Options for the reset. [eventData] <code>any</code> Additional properties to be added to event objects of events triggered by this method. <p></p>"},{"location":"3.1.Funcions_doc/#resetnorthpitchoptions-eventdata-this","title":"resetNorthPitch([options], [eventData]) \u2192<code>this</code>","text":"<p>Resets the map orientation so that north is up and pitch is set to 0\u252c\u2591.</p> <p>Kind: global function  </p> Param Type Description [options] <code>Object</code> Options for the reset. [eventData] <code>any</code> Additional properties to be added to event objects of events triggered by this method. <p></p>"},{"location":"3.1.Funcions_doc/#resizeeventdata-this","title":"resize([eventData]) \u2192<code>this</code>","text":"<p>Resizes the map to fit its container.</p> <p>Kind: global function  </p> Param Type Description [eventData] <code>any</code> Additional properties to be added to event objects of events triggered by this method. <p></p>"},{"location":"3.1.Funcions_doc/#rotatetobearing-options-eventdata-this","title":"rotateTo(bearing, [options], [eventData]) \u2192<code>this</code>","text":"<p>Rotates the map to the specified bearing with an animated transition.</p> <p>Kind: global function  </p> Param Type Description bearing <code>number</code> The desired bearing (in degrees) to rotate the map to. [options] <code>Object</code> Options for the rotation. [eventData] <code>any</code> Additional properties to be added to event objects of events triggered by this method. <p></p>"},{"location":"3.1.Funcions_doc/#setbearingbearing-eventdata-this","title":"setBearing(bearing, [eventData]) \u2192<code>this</code>","text":"<p>Sets the map's bearing with an optional animated transition.</p> <p>Kind: global function  </p> Param Type Description bearing <code>number</code> The desired bearing (in degrees) to set for the map. [eventData] <code>any</code> Additional properties to be added to event objects of events triggered by this method. <p></p>"},{"location":"3.1.Funcions_doc/#setcentercenter-eventdata-this","title":"setCenter(center, [eventData]) \u2192<code>this</code>","text":"<p>Sets the map's center coordinates with an optional animated transition.</p> <p>Kind: global function  </p> Param Type Description center <code>LngLatLike</code> The desired center coordinates to set for the map. [eventData] <code>any</code> Additional properties to be added to event objects of events triggered by this method. <p></p>"},{"location":"3.1.Funcions_doc/#seteventedparentparent-data-this","title":"setEventedParent([parent], [data]) \u2192<code>this</code>","text":"<p>Sets the parent of the map's event emitter.</p> <p>Kind: global function  </p> Param Type Description [parent] <code>any</code> The parent object to set for the event emitter. [data] <code>any</code> Additional data to pass to the parent. <p></p>"},{"location":"3.1.Funcions_doc/#setfeaturestatefeature-state-this","title":"setFeatureState(feature, state) \u2192<code>this</code>","text":"<p>Sets the state of a feature.</p> <p>Kind: global function  </p> Param Type Description feature <code>Object</code> The feature to set the state for. state <code>Object</code> The state object to set for the feature. <p></p>"},{"location":"3.1.Funcions_doc/#setfilterlayerid-filter-options-this","title":"setFilter(layerId, [filter], [options]) \u2192<code>this</code>","text":"<p>Sets the filter for a specified layer.</p> <p>Kind: global function  </p> Param Type Description layerId <code>string</code> The ID of the layer to set the filter for. [filter] <code>Array</code> The filter array to apply to the layer. [options] <code>Object</code> Options for the filter. <p></p>"},{"location":"3.1.Funcions_doc/#setglyphsglyphsurl-options-this","title":"setGlyphs(glyphsUrl, [options]) \u2192<code>this</code>","text":"<p>Sets the glyphs for the map's style.</p> <p>Kind: global function  </p> Param Type Description glyphsUrl <code>string</code> The URL to the glyphs. [options] <code>Object</code> Options for setting the glyphs. <p></p>"},{"location":"3.1.Funcions_doc/#setlayerzoomrangelayerid-minzoom-maxzoom-this","title":"setLayerZoomRange(layerId, minzoom, maxzoom) \u2192<code>this</code>","text":"<p>Sets the zoom range for a specified layer.</p> <p>Kind: global function  </p> Param Type Description layerId <code>string</code> The ID of the layer to set the zoom range for. minzoom <code>number</code> The minimum zoom level for the layer. maxzoom <code>number</code> The maximum zoom level for the layer. <p></p>"},{"location":"3.1.Funcions_doc/#setlayoutpropertylayerid-name-value-options-this","title":"setLayoutProperty(layerId, name, value, [options]) \u2192<code>this</code>","text":"<p>Sets a layout property for a specified layer.</p> <p>Kind: global function  </p> Param Type Description layerId <code>string</code> The ID of the layer to set the layout property for. name <code>string</code> The name of the layout property to set. value <code>any</code> The value to set for the layout property. [options] <code>Object</code> Options for setting the layout property. <p></p>"},{"location":"3.1.Funcions_doc/#setlightlight-options-this","title":"setLight(light, [options]) \u2192<code>this</code>","text":"<p>Sets the light for the map's style.</p> <p>Kind: global function  </p> Param Type Description light <code>Object</code> The light object to set for the map. [options] <code>Object</code> Options for setting the light. <p></p>"},{"location":"3.1.Funcions_doc/#setmaxboundsbounds-this","title":"setMaxBounds(bounds) \u2192<code>this</code>","text":"<p>Sets the maximum bounds for the map.</p> <p>Kind: global function  </p> Param Type Description bounds <code>Array</code> The maximum bounds for the map. <p></p>"},{"location":"3.1.Funcions_doc/#setmaxpitchmaxpitch-this","title":"setMaxPitch(maxPitch) \u2192<code>this</code>","text":"<p>Sets the maximum pitch for the map.</p> <p>Kind: global function  </p> Param Type Description maxPitch <code>number</code> The maximum pitch (in degrees) for the map. <p></p>"},{"location":"3.1.Funcions_doc/#setmaxzoommaxzoom-this","title":"setMaxZoom(maxZoom) \u2192<code>this</code>","text":"<p>Sets the maximum zoom level for the map.</p> <p>Kind: global function  </p> Param Type Description maxZoom <code>number</code> The maximum zoom level for the map. <p></p>"},{"location":"3.1.Funcions_doc/#setminpitchminpitch-this","title":"setMinPitch(minPitch) \u2192<code>this</code>","text":"<p>Sets the minimum pitch for the map.</p> <p>Kind: global function  </p> Param Type Description minPitch <code>number</code> The minimum pitch (in degrees) for the map. <p></p>"},{"location":"3.1.Funcions_doc/#setminzoomminzoom-this","title":"setMinZoom(minZoom) \u2192<code>this</code>","text":"<p>Sets the minimum zoom level for the map.</p> <p>Kind: global function  </p> Param Type Description minZoom <code>number</code> The minimum zoom level for the map. <p></p>"},{"location":"3.1.Funcions_doc/#setpaddingpadding-eventdata-this","title":"setPadding(padding, [eventData]) \u2192<code>this</code>","text":"<p>Sets padding for the map's container.</p> <p>Kind: global function  </p> Param Type Description padding <code>Object</code> The padding object to set for the map's container. [eventData] <code>any</code> Additional properties to be added to event objects of events triggered by this method. <p></p>"},{"location":"3.1.Funcions_doc/#setpaintpropertylayerid-name-value-options-this","title":"setPaintProperty(layerId, name, value, [options]) \u2192<code>this</code>","text":"<p>Sets a paint property for a specified layer.</p> <p>Kind: global function  </p> Param Type Description layerId <code>string</code> The ID of the layer to set the paint property for. name <code>string</code> The name of the paint property to set. value <code>any</code> The value to set for the paint property. [options] <code>Object</code> Options for setting the paint property. <p></p>"},{"location":"3.1.Funcions_doc/#setpitchpitch-eventdata-this","title":"setPitch(pitch, [eventData]) \u2192<code>this</code>","text":"<p>Sets the map's pitch angle with an optional animated transition.</p> <p>Kind: global function  </p> Param Type Description pitch <code>number</code> The desired pitch angle (in degrees) to set for the map. [eventData] <code>any</code> Additional properties to be added to event objects of events triggered by this method. <p></p>"},{"location":"3.1.Funcions_doc/#setpixelratiopixelratio-this","title":"setPixelRatio(pixelRatio) \u2192<code>this</code>","text":"<p>Sets the pixel ratio for the map.</p> <p>Kind: global function  </p> Param Type Description pixelRatio <code>number</code> The desired pixel ratio for the map. <p></p>"},{"location":"3.1.Funcions_doc/#setrenderworldcopiesrenderworldcopies-this","title":"setRenderWorldCopies(renderWorldCopies) \u2192<code>this</code>","text":"<p>Sets whether the map should render world copies when the center longitude is greater than or less than \u252c\u2592180 degrees.</p> <p>Kind: global function  </p> Param Type Description renderWorldCopies <code>boolean</code> A boolean indicating whether to render world copies. <p></p>"},{"location":"3.1.Funcions_doc/#setspritespriteurl-options-this","title":"setSprite(spriteUrl, [options]) \u2192<code>this</code>","text":"<p>Sets the sprite for the map's style.</p> <p>Kind: global function  </p> Param Type Description spriteUrl <code>string</code> The URL to the sprite. [options] <code>Object</code> Options for setting the sprite. <p></p>"},{"location":"3.1.Funcions_doc/#setterrainoptions-this","title":"setTerrain(options) \u2192<code>this</code>","text":"<p>Loads a 3D terrain mesh based on a \"raster-dem\" source.</p> <p>Kind: global function  </p> Param Type Description options <code>TerrainSpecification</code> Options object specifying the terrain source. <p></p>"},{"location":"3.1.Funcions_doc/#settransformrequesttransformrequest-this","title":"setTransformRequest(transformRequest) \u2192<code>this</code>","text":"<p>Updates the requestManager's transform request with a new function.</p> <p>Kind: global function  </p> Param Type Description transformRequest <code>RequestTransformFunction</code> The callback function to update the transform request. <p></p>"},{"location":"3.1.Funcions_doc/#setzoomzoom-eventdata-this","title":"setZoom(zoom, [eventData]) \u2192<code>this</code>","text":"<p>Sets the map's zoom level.</p> <p>Kind: global function  </p> Param Type Description zoom <code>number</code> The zoom level to set (0-20). [eventData] <code>any</code> Additional properties to be added to event objects of events triggered by this method. <p></p>"},{"location":"3.1.Funcions_doc/#snaptonorthoptions-eventdata-this","title":"snapToNorth([options], [eventData]) \u2192<code>this</code>","text":"<p>Snaps the map so that north is up (0\u252c\u2591 bearing), if the current bearing is close enough to it.</p> <p>Kind: global function  </p> Param Type Description [options] <code>Object</code> Options for snapping to north. [eventData] <code>any</code> Additional properties to be added to event objects of events triggered by this method. <p></p>"},{"location":"3.1.Funcions_doc/#stop-this","title":"stop() \u2192<code>this</code>","text":"<p>Stops any animated transition underway.</p> <p>Kind: global function </p>"},{"location":"3.1.Funcions_doc/#triggerrepaint-void","title":"triggerRepaint() \u2192<code>void</code>","text":"<p>Triggers the rendering of a single frame.</p> <p>Kind: global function </p>"},{"location":"3.1.Funcions_doc/#unprojectpoint-lnglat","title":"unproject(point) \u2192<code>LngLat</code>","text":"<p>Returns geographical coordinates corresponding to the specified pixel coordinates.</p> <p>Kind: global function Returns: <code>LngLat</code> - The geographical coordinates corresponding to the specified pixel coordinates.  </p> Param Type Description point <code>PointLike</code> The pixel coordinates to unproject. <p></p>"},{"location":"3.1.Funcions_doc/#updateimageid-image-this","title":"updateImage(id, image) \u2192<code>this</code>","text":"<p>Updates an existing image in the style's sprite.</p> <p>Kind: global function  </p> Param Type Description id <code>string</code> The ID of the image to update. image <code>ImageBitmap</code> | <code>HTMLImageElement</code> | <code>ImageData</code> | <code>StyleImageInterface</code> | <code>object</code> The new image data. <p></p>"},{"location":"3.1.Funcions_doc/#zoominoptions-eventdata-this","title":"zoomIn([options], [eventData]) \u2192<code>this</code>","text":"<p>Increases the map's zoom level by 1.</p> <p>Kind: global function  </p> Param Type Description [options] <code>Object</code> Options for zooming in. [eventData] <code>any</code> Additional properties to be added to event objects of events triggered by this method. <p></p>"},{"location":"3.1.Funcions_doc/#zoomoutoptions-eventdata-this","title":"zoomOut([options], [eventData]) \u2192<code>this</code>","text":"<p>Decreases the map's zoom level by 1.</p> <p>Kind: global function  </p> Param Type Description [options] <code>Object</code> Options for zooming out. [eventData] <code>any</code> Additional properties to be added to event objects of events triggered by this method. <p></p>"},{"location":"3.1.Funcions_doc/#zoomtozoom-options-eventdata-this","title":"zoomTo(zoom, [options], [eventData]) \u2192<code>this</code>","text":"<p>Zooms the map to the specified zoom level with an animated transition.</p> <p>Kind: global function  </p> Param Type Description zoom <code>number</code> The zoom level to transition to. [options] <code>Object</code> Options for zooming to. [eventData] <code>any</code> Additional properties to be added to event objects of events triggered by this method. <p></p>"},{"location":"3.1.Funcions_doc/#addlayergeojsonlayer-layerposition","title":"addLayerGeoJSON(layer, layerPosition)","text":"<p>Adds a GeoJSON layer to the map.</p> <p>Kind: global function  </p> Param Type Description layer <code>Object</code> Options for the GeoJSON layer to add. layer.id <code>string</code> Unique identifier for the layer. layer.data <code>Object</code> GeoJSON data for the layer. layer.type <code>string</code> Map layer type (e.g., 'symbol', 'circle', 'fill').   * layer.layout <code>Object</code> Layer layout configuration. layer.paint <code>Object</code> Layer paint configuration. layerPosition <code>string</code> Position of the layer: 'top', below 'labels' or below 'lines'. <p></p>"},{"location":"3.1.Funcions_doc/#addlayerwmstiles-idlayer-options","title":"addLayerWMS(tiles, idLayer, options)","text":"<p>Adds a WMS layer to the map.</p> <p>Kind: global function  </p> Param Type Description tiles <code>Array.&lt;string&gt;</code> Tiles for the raster layer. idLayer <code>string</code> Unique identifier for the layer. options <code>Object</code> Options of the layer: layout, paint and layerPosition. <p></p>"},{"location":"3.1.Funcions_doc/#addlogooptions","title":"addLogo(options)","text":"<p>Adds a logo to the map.</p> <p>Kind: global function  </p> Param Type Description options <code>Object</code> Options for the logo to add. options.id <code>string</code> Unique identifier for the logo. options.url <code>string</code> URL of the logo image. options.href <code>string</code> URL to navigate to when the logo is clicked. options.height <code>string</code> Height of the logo. <p></p>"},{"location":"3.1.Funcions_doc/#addbasemapsicgcbasesarray","title":"addBasemapsICGC(basesArray)","text":"<p>Adds base layers to the map.</p> <p>Kind: global function  </p> Param Type Description basesArray <code>Array.&lt;Object&gt;</code> Array of base layer objects. <p></p>"},{"location":"3.1.Funcions_doc/#addbasemapsbaselayers","title":"addBasemaps(baseLayers)","text":"<p>Adds base layers to the map.</p> <p>Kind: global function  </p> Param Type Description baseLayers <code>Array.&lt;Object&gt;</code> Array of base layer objects. baseLayers.label <code>string</code> Label for the base layer. baseLayers.image <code>string</code> URL of the image representing the base layer. baseLayers.url <code>string</code> URL of the base layer style. <p></p>"},{"location":"3.1.Funcions_doc/#addfeaturequeryidlayer-queryfields-popupstyle","title":"addFeatureQuery(idLayer, queryFields, popupStyle)","text":"<p>Adds feature query function to a layer.</p> <p>Kind: global function  </p> Param Type Description idLayer <code>string</code> name of the layer queryFields <code>objetc</code> optional indications for the popup popupStyle <code>objetc</code> optional indications for the popup style <p></p>"},{"location":"3.1.Funcions_doc/#addscalecontroloptions-position","title":"addScaleControl(options, position)","text":"<p>Adds a scale control to the map.  * @function addScaleControl</p> <p>Kind: global function  </p> Param Type Description options <code>Object</code> Options for configuring the scale control. position <code>string</code> The position on the map to place the scale control (e.g., 'top-left', 'bottom-right'). <p></p>"},{"location":"3.1.Funcions_doc/#addexportcontroloptions-position","title":"addExportControl(options, [position])","text":"<p>Adds an export control to the map with the provided options and position.</p> <p>Kind: global function  </p> Param Type Description options <code>Object</code> | <code>string</code> Options for the export control or position if provided as a string. [position] <code>string</code> Position to place the export control (e.g., 'top-right'). <p></p>"},{"location":"3.1.Funcions_doc/#addmarkeroptions-object","title":"addMarker(options) \u2192<code>Object</code>","text":"<p>Adds a marker to the map.</p> <p>Kind: global function Returns: <code>Object</code> - - Instance of the added marker.  </p> Param Type Description options <code>Object</code> Options for the marker to add. options.text <code>string</code> Text content for the marker popup. options.options <code>Object</code> Marker options. options.coord <code>LngLatLike</code> Coordinates for placing the marker. options.textOffset <code>Object</code> Text offset for the marker popup. <p></p>"},{"location":"3.1.Funcions_doc/#addpopupoptions-coord-text-popupstyle-object","title":"addPopup(options, coord, text, popupStyle) \u2192<code>Object</code>","text":"<p>Adds a popup to the map.</p> <p>Kind: global function Returns: <code>Object</code> - - Instance of the added popup.  </p> Param Type Description options <code>Object</code> Options for the popup to add. coord <code>LngLatLike</code> Coordinates for placing the popup. text <code>string</code> HTML content for the popup. popupStyle <code>string</code> css content for the popup style. <p></p>"},{"location":"3.1.Funcions_doc/#addfullscreenposition","title":"addFullScreen([position])","text":"<p>Adds a fullscreen control to the map.</p> <p>Kind: global function  </p> Param Type Default Description [position] <code>string</code> <code>\"'top-right'\"</code> Position to add the control on the map. <p></p>"},{"location":"3.1.Funcions_doc/#addmenuitemname","title":"addMenuItem(name)","text":"<p>Adds a menu item with a checkbox for controlling the visibility of a layer on the map.</p> <p>Kind: global function  </p> Param Type Description name <code>string</code> The name of the layer corresponding to the menu item. <p></p>"},{"location":"3.1.Funcions_doc/#addlayertreeoptions","title":"addLayerTree(options)","text":"<p>Adds a layer tree to the map.</p> <p>Kind: global function  </p> Param Type Description options <code>Object</code> Options for the layer tree to add. options.features <code>Object</code> Features for the layer tree. options.id <code>string</code> Unique identifier for the layer tree. options.type <code>string</code> Type of layer tree ('geojson', 'raster', etc.). <p></p>"},{"location":"3.1.Funcions_doc/#createnavigationcontroloptions-position-object","title":"createNavigationControl(options, [position]) \u2192<code>Object</code>","text":"<p>Creates a navigation control with the provided options.</p> <p>Kind: global function Returns: <code>Object</code> - - Instance of the created navigation control.  </p> Param Type Default Description options <code>Object</code> Options for the navigation control. [position] <code>string</code> <code>\"'top-right'\"</code> Position to add the control on the map. <p></p>"},{"location":"3.1.Funcions_doc/#addnavigationcontroloptions-position","title":"addNavigationControl(options, [position])","text":"<p>Adds a navigation control to the map with the provided options.</p> <p>Kind: global function  </p> Param Type Default Description options <code>Object</code> Options for the navigation control. [position] <code>string</code> <code>\"'top-right'\"</code> Position to add the control on the map. <p></p>"},{"location":"3.1.Funcions_doc/#addattributioncontroloptions-position","title":"addAttributionControl(options, [position])","text":"<p>Adds an attribution control to the map with the provided options.</p> <p>Kind: global function  </p> Param Type Default Description options <code>Object</code> Options for the attribution control. [position] <code>string</code> <code>\"'bottom-right'\"</code> Position to add the control on the map. <p></p>"},{"location":"3.1.Funcions_doc/#addimagelayericgcurl-idlayer-options","title":"addImageLayerICGC(url, idLayer, options)","text":"<p>Adds an ICGC image layer to the map based on the specified name and year.</p> <p>Kind: global function  </p> Param Type Description url <code>string</code> The url of the  layer. idLayer <code>string</code> The user id for the  layer. options <code>object</code> Type, position,layout and paint options for the layer <p></p>"},{"location":"3.1.Funcions_doc/#addvectorlayericgcurl-idlayer-options","title":"addVectorLayerICGC(url, idLayer, options)","text":"<p>Adds an ICGC vector layer to the map based on the specified name and year.</p> <p>Kind: global function  </p> Param Type Description url <code>string</code> The url of the vector layer. idLayer <code>string</code> The user id for the vector layer. options <code>object</code> Type, position,layout and paint options for the layer <p></p>"},{"location":"3.1.Funcions_doc/#addfgblayericgcurl-idlayer-options","title":"addFGBLayerICGC(url, idLayer, options)","text":"<p>Adds an ICGC FGB layer to the map based on the specified name and year.</p> <p>Kind: global function  </p> Param Type Description url <code>string</code> The url of the FGB layer. idLayer <code>string</code> Id for the layer. options <code>object</code> Paint option for the layer <p></p>"},{"location":"3.1.Funcions_doc/#addterrainicgcurl-controlposition","title":"addTerrainICGC(url, controlPosition)","text":"<p>Adds 3D terrain to the map using hillshade.</p> <p>Kind: global function  </p> Param Type Description url <code>string</code> dataset url of the terrain controlPosition <code>string</code> Position to add the control on the map. <p></p>"},{"location":"3.1.Funcions_doc/#addlegendurl-idlayer","title":"addLegend(url, idLayer)","text":"<p>Add image legend.</p> <p>Kind: global function  </p> Param Type Description url <code>string</code> image legend url. idLayer <code>string</code> layer's name. <p></p>"},{"location":"3.1.Funcions_doc/#_findimagetypeurl-var1-var2-var3-var4-string-null","title":"_findImageType(url, var1, var2, var3, var4) \u2192<code>string</code> | <code>null</code>","text":"<p>Finds the type of image based on the provided URL and specified vectors.</p> <p>Kind: global function Returns: <code>string</code> | <code>null</code> - - The type of image if found, otherwise null.  </p> Param Type Description url <code>string</code> The URL of the image to find the type for. var1 <code>Object</code> The first vector object containing key-value pairs. var2 <code>Object</code> The second vector object containing key-value pairs. var3 <code>Object</code> The third vector object containing key-value pairs. var4 <code>Object</code> The fourth vector object containing key-value pairs. <p></p>"},{"location":"3.1.Funcions_doc/#_getkeybyurlfgburl-string-null","title":"_getKeyByUrlFGB(url) \u2192<code>string</code> | <code>null</code>","text":"<p>Gets the key by URL from the FGBAdmin layers.</p> <p>Kind: global function Returns: <code>string</code> | <code>null</code> - - The key if found, otherwise null.  </p> Param Type Description url <code>string</code> The URL to find the key for in the FGBAdmin layers. <p></p>"},{"location":"3.1.Funcions_doc/#_getlegendbynamename-string-null","title":"_getLegendByName(name) \u2192<code>string</code> | <code>null</code>","text":"<p>Gets the legend by name from the default vector layers.</p> <p>Kind: global function Returns: <code>string</code> | <code>null</code> - - The legend if found, otherwise null.  </p> Param Type Description name <code>string</code> The name of the vector layer to get the legend for. <p></p>"},{"location":"3.1.Funcions_doc/#_getkeybyurlvectorurl-string-null","title":"_getKeyByUrlVector(url) \u2192<code>string</code> | <code>null</code>","text":"<p>Gets the key by URL from the Vector layers.</p> <p>Kind: global function Returns: <code>string</code> | <code>null</code> - - The key if found, otherwise null.  </p> Param Type Description url <code>string</code> The URL to find the key for in the Vector layers. <p></p>"},{"location":"3.1.Funcions_doc/#_raisetext3dstyle-promisevoid","title":"_raiseText3DStyle() \u2192<code>Promise.&lt;void&gt;</code>","text":"<p>Raises text 3D style on the map.</p> <p>Kind: global function Returns: <code>Promise.&lt;void&gt;</code> - - A promise that resolves after updating the text 3D style on the map. </p>"},{"location":"3.1.Funcions_doc/#_dealstylemapsname-object-string-null","title":"_dealStyleMaps(name) \u2192<code>Object</code> | <code>string</code> | <code>null</code>","text":"<p>Deals with map styles based on the name.</p> <p>Kind: global function Returns: <code>Object</code> | <code>string</code> | <code>null</code> - - The map style object if found, or the input name if not found, or null if an error occurs.  </p> Param Type Description name <code>string</code> The name of the map style. <p></p>"},{"location":"3.1.Funcions_doc/#_dealorto3dstylename-void-null","title":"_dealOrto3dStyle(name) \u2192<code>void</code> | <code>null</code>","text":"<p>Deals with the 3D ortho style based on the name.</p> <p>Kind: global function Returns: <code>void</code> | <code>null</code> - - Returns null if an error occurs.  </p> Param Type Description name <code>string</code> The name of the orto3D style. <p></p>"},{"location":"3.1.Funcions_doc/#_dealorderlayerorder-string","title":"_dealOrderLayer(order) \u2192<code>string</code>","text":"<p>Deals with the order of the layer.</p> <p>Kind: global function Returns: <code>string</code> - - The id of the first symbol layer if the order is 'symbol', the id of the first line layer if the order is 'line', otherwise an empty string.  </p> Param Type Description order <code>string</code> The order of the layer. <p></p>"},{"location":"3.1.Funcions_doc/#_firstsymbollayer-string-undefined","title":"_firstSymbolLayer() \u2192<code>string</code> | <code>undefined</code>","text":"<p>Retrieves the id of the first symbol layer.</p> <p>Kind: global function Returns: <code>string</code> | <code>undefined</code> - - The id of the first symbol layer if found, otherwise undefined. </p>"},{"location":"3.1.Funcions_doc/#_firstlinelayer-string-undefined","title":"_firstLineLayer() \u2192<code>string</code> | <code>undefined</code>","text":"<p>Retrieves the id of the first line layer.</p> <p>Kind: global function Returns: <code>string</code> | <code>undefined</code> - - The id of the first line layer if found, otherwise undefined. </p>"},{"location":"3.1.Funcions_doc/#_createcitiesmapboxlayer-mapboxlayer-null","title":"_createCitiesMapboxLayer() \u2192<code>MapboxLayer</code> | <code>null</code>","text":"<p>Creates a Mapbox layer for displaying cities in 3D.</p> <p>Kind: global function Returns: <code>MapboxLayer</code> | <code>null</code> - - The Mapbox layer for displaying cities in 3D if created successfully, otherwise null.  </p>"},{"location":"4.1.Versio/","title":"4.1.Versio","text":""},{"location":"4.1.Versio/#versionat","title":"Versionat","text":"<p>v. 1.0.0 </p>"}]}